/**
 * Copyright 2014 - 2015 SCN Community Contributors
 * 
 * Original Source Code Location:
 *  https://github.com/org-scn-design-studio-community/sdkpackage/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 *  
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */;
 /** code for recognition of script path */
 (function() {
	 var myScript = $("script:last")[0].src;
 	_readScriptPath = function () {
 		if(myScript) {
 			var myScriptSuffix = "res/Choropleth/";
 			var myPluginSuffix = "org.scn.community.geovis/";
 			var mainScriptPathIndex = myScript.indexOf(myScriptSuffix);
 			var mainSDKPathIndex = myScript.indexOf(myPluginSuffix);
 			var mainSDKPath = myScript.substring(0, mainSDKPathIndex);
 			var ownScriptPath = myScript.substring(0, mainScriptPathIndex) + myScriptSuffix;
 			return {
 				myScriptPath : ownScriptPath,	// http://localhost:9091/aad/zen/mimes/sdk_include/org.scn.community.geovis/res/Choropleth/
 				mainSDKPath : mainSDKPath		// http://localhost:9091/aad/zen/mimes/sdk_include/
 			};
 		}
 		return "";
 };
 /** end of recognition of script path */
 /** RequireJS Config **/
 var pathInfo = _readScriptPath();
 var worldData = {"type":"Topology","transform":{"scale":[0.029220398083336024,0.014765793092600316],"translate":[-180,-84.3736925080936]},"objects":{"units":{"type":"GeometryCollection","geometries":[{"arcs":[[0,1,2,3,4,5]],"type":"Polygon","properties":{"name":"Afghanistan"}},{"arcs":[[[6,7,8,9]],[[10,11,12]]],"type":"MultiPolygon","properties":{"name":"Angola"}},{"arcs":[[13,14,15,16,17,18,19,20,21,22]],"type":"Polygon","properties":{"name":"Albania"}},{"type":null,"properties":{"name":"Aland"}},{"arcs":[[23,24]],"type":"Polygon","properties":{"name":"Andorra"}},{"arcs":[[25,26,27,28,29]],"type":"Polygon","properties":{"name":"United Arab Emirates"}},{"arcs":[[[30,31]],[[32,33,34,35,36,37]]],"type":"MultiPolygon","properties":{"name":"Argentina"}},{"arcs":[[38,39,40,41,42]],"type":"Polygon","properties":{"name":"Armenia"}},{"arcs":[[[43]],[[44]],[[45]]],"type":"MultiPolygon","properties":{"name":"Antarctica"}},{"type":null,"properties":{"name":"Fr. S. Antarctic Lands"}},{"arcs":[[[46]],[[47]]],"type":"MultiPolygon","properties":{"name":"Australia"}},{"arcs":[[48,49,50,51,52,53,54,55,56,57]],"type":"Polygon","properties":{"name":"Austria"}},{"arcs":[[[58,59,-41]],[[60,61,62,-39,63]]],"type":"MultiPolygon","properties":{"name":"Azerbaijan"}},{"arcs":[[64,65,66,67]],"type":"Polygon","properties":{"name":"Burundi"}},{"arcs":[[68,69,70,71,72,73,74]],"type":"Polygon","properties":{"name":"Belgium"}},{"arcs":[[75,76,77,78,79]],"type":"Polygon","properties":{"name":"Benin"}},{"arcs":[[80,-79,81,82,83,84]],"type":"Polygon","properties":{"name":"Burkina Faso"}},{"arcs":[[85,86,87]],"type":"Polygon","properties":{"name":"Bangladesh"}},{"arcs":[[88,89,90,91,92,93]],"type":"Polygon","properties":{"name":"Bulgaria"}},{"type":null,"properties":{"name":"Bahrain"}},{"type":null,"properties":{"name":"Bahamas"}},{"arcs":[[94,95,96,97,98]],"type":"Polygon","properties":{"name":"Bosnia and Herz."}},{"arcs":[[99,100,101,102,103]],"type":"Polygon","properties":{"name":"Belarus"}},{"arcs":[[104,105,106]],"type":"Polygon","properties":{"name":"Belize"}},{"arcs":[[107,-38,108,109,110,111,112]],"type":"Polygon","properties":{"name":"Bolivia"}},{"arcs":[[[113]],[[114,115,116,117,118,119,-34,120,121,122,-113,123,124,125,126]]],"type":"MultiPolygon","properties":{"name":"Brazil"}},{"type":null,"properties":{"name":"Barbados"}},{"arcs":[],"type":"MultiPolygon","properties":{"name":"Brunei"}},{"arcs":[[131,132]],"type":"Polygon","properties":{"name":"Bhutan"}},{"arcs":[[133,134,135]],"type":"Polygon","properties":{"name":"Botswana"}},{"arcs":[[136,137,138,139,140,141]],"type":"Polygon","properties":{"name":"Central African Rep."}},{"arcs":[[[142,143,144,145]],[[146]],[[147]],[[148]],[[149,150,151,152,153,154,155,156,157,158,159,160]],[[161]],[[162]],[[163]],[[164]],[[165]],[[166]],[[167]],[[168]],[[169]],[[170]]],"type":"MultiPolygon","properties":{"name":"Canada"}},{"arcs":[[171,-55,172,-53,173,174,175,176,177]],"type":"Polygon","properties":{"name":"Switzerland"}},{"arcs":[[[-31,178]],[[-37,179,180,-109]]],"type":"MultiPolygon","properties":{"name":"Chile"}},{"arcs":[[[181]],[[182,183,184,185,186,187,188,189,190,191,-133,192,193,194,195,196,-1,197,198,199,200,201,202,203,204]]],"type":"MultiPolygon","properties":{"name":"China"}},{"arcs":[[-84,205,206,207,208,209]],"type":"Polygon","properties":{"name":"Côte d'Ivoire"}},{"arcs":[[210,-141,211,212,213,214,215,216,217]],"type":"Polygon","properties":{"name":"Cameroon"}},{"arcs":[[[218,219]],[[220,221,222]]],"type":"MultiPolygon","properties":{"name":"Cyprus U.N. Buffer Zone"}},{"arcs":[[223,224,225,226,227,228,229,230,231,-67,232,233,234,235,-10,236,-11,237,-139]],"type":"Polygon","properties":{"name":"Dem. Rep. Congo"}},{"arcs":[[-238,-13,238,239,-212,-140]],"type":"Polygon","properties":{"name":"Congo"}},{"arcs":[[240,-125,241,242,243,244,245]],"type":"Polygon","properties":{"name":"Colombia"}},{"type":null,"properties":{"name":"Comoros"}},{"type":null,"properties":{"name":"Cape Verde"}},{"arcs":[[246,247,248,249]],"type":"Polygon","properties":{"name":"Costa Rica"}},{"arcs":[[250]],"type":"Polygon","properties":{"name":"Cuba"}},{"type":null,"properties":{"name":"Curaçao"}},{"arcs":[[251,252,-223,253]],"type":"Polygon","properties":{"name":"N. Cyprus"}},{"arcs":[[[254,255,256]],[[257,258,-220,259,-222]]],"type":"MultiPolygon","properties":{"name":"Cyprus"}},{"arcs":[[260,261,-58,262]],"type":"Polygon","properties":{"name":"Czech Rep."}},{"arcs":[[263,264,-263,-57,265,-178,266,267,-69,268,269,270]],"type":"Polygon","properties":{"name":"Germany"}},{"arcs":[[271,272,273,274,275,276]],"type":"Polygon","properties":{"name":"Djibouti"}},{"type":null,"properties":{"name":"Dominica"}},{"arcs":[[-271,277]],"type":"Polygon","properties":{"name":"Denmark"}},{"arcs":[[278,279,280,281]],"type":"Polygon","properties":{"name":"Dominican Rep."}},{"arcs":[[282,283,284,285,286,287,288,289]],"type":"Polygon","properties":{"name":"Algeria"}},{"arcs":[[290,291,-243]],"type":"Polygon","properties":{"name":"Ecuador"}},{"arcs":[[292,293,294,295,296,297]],"type":"Polygon","properties":{"name":"Egypt"}},{"arcs":[[-276,298,299,300]],"type":"Polygon","properties":{"name":"Eritrea"}},{"arcs":[[-256,301,-258,-221,-253]],"type":"Polygon","properties":{"name":"Dhekelia"}},{"arcs":[[302,-24,303,304,305,306]],"type":"Polygon","properties":{"name":"Spain"}},{"arcs":[[307,308,309,310,311,312,313]],"type":"Polygon","properties":{"name":"Estonia"}},{"arcs":[[-275,314,-273,315,316,317,318,319,-299]],"type":"Polygon","properties":{"name":"Ethiopia"}},{"arcs":[[320,321,322,323]],"type":"Polygon","properties":{"name":"Finland"}},{"type":null,"properties":{"name":"Fiji"}},{"type":null,"properties":{"name":"Falkland Is."}},{"arcs":[[[-116,324,325]],[[326,-267,-177,327,-175,328,329,-304,-25,-303,330,-71]]],"type":"MultiPolygon","properties":{"name":"France"}},{"type":null,"properties":{"name":"Faeroe Is."}},{"type":null,"properties":{"name":"Micronesia"}},{"arcs":[[-240,331,332,-213]],"type":"Polygon","properties":{"name":"Gabon"}},{"arcs":[[335]],"type":"Polygon","properties":{"name":"United Kingdom"}},{"arcs":[[-64,-43,336,337,338]],"type":"Polygon","properties":{"name":"Georgia"}},{"arcs":[[339,340,-206,-83]],"type":"Polygon","properties":{"name":"Ghana"}},{"type":null,"properties":{"name":"Gibraltar"}},{"arcs":[[341,-209,342,343,344,345,346]],"type":"Polygon","properties":{"name":"Guinea"}},{"arcs":[[347,348]],"type":"Polygon","properties":{"name":"Gambia"}},{"arcs":[[349,350,-346]],"type":"Polygon","properties":{"name":"Guinea-Bissau"}},{"arcs":[[-333,351,-214]],"type":"Polygon","properties":{"name":"Eq. Guinea"}},{"arcs":[[352,-91,353,354,-19,355]],"type":"Polygon","properties":{"name":"Greece"}},{"type":null,"properties":{"name":"Grenada"}},{"arcs":[[356]],"type":"Polygon","properties":{"name":"Greenland"}},{"arcs":[[-106,357,358,359,360,361]],"type":"Polygon","properties":{"name":"Guatemala"}},{"type":null,"properties":{"name":"Guam"}},{"arcs":[[362,-127,363,364]],"type":"Polygon","properties":{"name":"Guyana"}},{"arcs":[[365,-187]],"type":"Polygon","properties":{"name":"Hong Kong"}},{"type":null,"properties":{"name":"Heard I. and McDonald Is."}},{"arcs":[[366,367,368,-359,369]],"type":"Polygon","properties":{"name":"Honduras"}},{"arcs":[[[-97,370,371]],[[372,373,-99,374,375]]],"type":"MultiPolygon","properties":{"name":"Croatia"}},{"arcs":[[-281,376,-279,377]],"type":"Polygon","properties":{"name":"Haiti"}},{"arcs":[[378,379,380,-373,381,-50,382]],"type":"Polygon","properties":{"name":"Hungary"}},{"arcs":[[[383,384,385,386]],[[387]],[[388,389]],[[390]],[[392,393]],[[394]]],"type":"MultiPolygon","properties":{"name":"Indonesia"}},{"type":null,"properties":{"name":"Isle of Man"}},{"arcs":[[395,-193,-132,-192,396,-88,397,398,399,-195]],"type":"Polygon","properties":{"name":"India"}},{"arcs":[[-334,400]],"type":"Polygon","properties":{"name":"Ireland"}},{"arcs":[[-40,-63,401,402,-3,403,404,405,406,-59]],"type":"Polygon","properties":{"name":"Iran"}},{"arcs":[[-406,407,408,409,410,411,412]],"type":"Polygon","properties":{"name":"Iraq"}},{"arcs":[[413]],"type":"Polygon","properties":{"name":"Iceland"}},{"arcs":[[414,415,416,417,418,419,420,-294,421,422,423,424]],"type":"Polygon","properties":{"name":"Israel"}},{"arcs":[[[425]],[[426]],[[427,428,-329,-174,-52]]],"type":"MultiPolygon","properties":{"name":"Italy"}},{"type":null,"properties":{"name":"Jamaica"}},{"arcs":[[429,430,-420,431,-418,432,433,-415,434,-411]],"type":"Polygon","properties":{"name":"Jordan"}},{"arcs":[[[435]],[[436]],[[437]]],"type":"MultiPolygon","properties":{"name":"Japan"}},{"type":null,"properties":{"name":"Baikonur"}},{"arcs":[[-400,438,-196]],"type":"Polygon","properties":{"name":"Siachen Glacier"}},{"arcs":[[-200,441,442,443,444,445,446,447]],"type":"Polygon","properties":{"name":"Kazakhstan"}},{"arcs":[[-318,448,449,450,451,452,453]],"type":"Polygon","properties":{"name":"Kenya"}},{"arcs":[[-199,454,455,-442]],"type":"Polygon","properties":{"name":"Kyrgyzstan"}},{"arcs":[[456,457,458,459]],"type":"Polygon","properties":{"name":"Cambodia"}},{"type":null,"properties":{"name":"Kiribati"}},{"arcs":[[460,461]],"type":"Polygon","properties":{"name":"Korea"}},{"arcs":[[462,-14,463,464]],"type":"Polygon","properties":{"name":"Kosovo"}},{"arcs":[[465,-409,466]],"type":"Polygon","properties":{"name":"Kuwait"}},{"arcs":[[467,-459,468,469,-190]],"type":"Polygon","properties":{"name":"Lao PDR"}},{"arcs":[[-424,470,471]],"type":"Polygon","properties":{"name":"Lebanon"}},{"arcs":[[-208,472,473,-343]],"type":"Polygon","properties":{"name":"Liberia"}},{"arcs":[[-297,474,475,476,-284,477,478]],"type":"Polygon","properties":{"name":"Libya"}},{"type":null,"properties":{"name":"Saint Lucia"}},{"type":null,"properties":{"name":"Liechtenstein"}},{"arcs":[[479]],"type":"Polygon","properties":{"name":"Sri Lanka"}},{"arcs":[[480]],"type":"Polygon","properties":{"name":"Lesotho"}},{"arcs":[[-103,481,482,483,484]],"type":"Polygon","properties":{"name":"Lithuania"}},{"arcs":[[-268,-327,-70]],"type":"Polygon","properties":{"name":"Luxembourg"}},{"arcs":[[485,-104,-485,486,-313]],"type":"Polygon","properties":{"name":"Latvia"}},{"type":null,"properties":{"name":"St-Martin"}},{"arcs":[[487,-289,488,489]],"type":"Polygon","properties":{"name":"Morocco"}},{"type":null,"properties":{"name":"Monaco"}},{"arcs":[[490,491]],"type":"Polygon","properties":{"name":"Moldova"}},{"arcs":[[492]],"type":"Polygon","properties":{"name":"Madagascar"}},{"arcs":[[493,494,495,496,497,-107,-362,498,499]],"type":"Polygon","properties":{"name":"Mexico"}},{"arcs":[[-92,-353,500,-17,501,-15,-463,502]],"type":"Polygon","properties":{"name":"Macedonia"}},{"arcs":[[503,-85,-210,-342,504,505,-286]],"type":"Polygon","properties":{"name":"Mali"}},{"arcs":[[-470,506,507,-86,-397,-191]],"type":"Polygon","properties":{"name":"Myanmar"}},{"arcs":[[508,-464,-23,509,-21,510,-371,-96]],"type":"Polygon","properties":{"name":"Montenegro"}},{"arcs":[[-204,511,-202,512]],"type":"Polygon","properties":{"name":"Mongolia"}},{"arcs":[[513,514,515,516,517,518,519,520,521]],"type":"Polygon","properties":{"name":"Mozambique"}},{"arcs":[[522,523,524,-287,-506]],"type":"Polygon","properties":{"name":"Mauritania"}},{"type":null,"properties":{"name":"Mauritius"}},{"arcs":[[525,-519,526,527]],"type":"Polygon","properties":{"name":"Malawi"}},{"arcs":[[[528,529]],[[-394,530,-131,531,-128,532]]],"type":"MultiPolygon","properties":{"name":"Malaysia"}},{"arcs":[[533,-136,534,535,-8]],"type":"Polygon","properties":{"name":"Namibia"}},{"type":null,"properties":{"name":"New Caledonia"}},{"arcs":[[536,537,-80,-81,-504,-285,-477]],"type":"Polygon","properties":{"name":"Niger"}},{"arcs":[[538,-216,539,-76,-538]],"type":"Polygon","properties":{"name":"Nigeria"}},{"arcs":[[540,-250,541,-367]],"type":"Polygon","properties":{"name":"Nicaragua"}},{"arcs":[[-269,-75,543]],"type":"Polygon","properties":{"name":"Netherlands"}},{"arcs":[[[544,-324,545,546]],[[547]]],"type":"MultiPolygon","properties":{"name":"Norway"}},{"arcs":[[-396,-194]],"type":"Polygon","properties":{"name":"Nepal"}},{"arcs":[[[548]],[[549]]],"type":"MultiPolygon","properties":{"name":"New Zealand"}},{"arcs":[[550,551,-27,552]],"type":"Polygon","properties":{"name":"Oman"}},{"arcs":[[-439,-399,554,-404,-2,-197]],"type":"Polygon","properties":{"name":"Pakistan"}},{"arcs":[[-245,555,-248,556]],"type":"Polygon","properties":{"name":"Panama"}},{"arcs":[[-124,-112,557,-110,-181,558,-291,-242]],"type":"Polygon","properties":{"name":"Peru"}},{"arcs":[[[559]],[[560]]],"type":"MultiPolygon","properties":{"name":"Philippines"}},{"type":null,"properties":{"name":"Palau"}},{"arcs":[[-389,561]],"type":"Polygon","properties":{"name":"Papua New Guinea"}},{"arcs":[[562,563,564,-482,-102,565,566,-261,-265,567]],"type":"Polygon","properties":{"name":"Poland"}},{"type":null,"properties":{"name":"Puerto Rico"}},{"arcs":[[568,569,-461,570,-185]],"type":"Polygon","properties":{"name":"Dem. Rep. Korea"}},{"arcs":[[571,-306]],"type":"Polygon","properties":{"name":"Portugal"}},{"arcs":[[-123,572,-121,-33,-108]],"type":"Polygon","properties":{"name":"Paraguay"}},{"arcs":[[[-293,573,-422]],[[-434,574,-416]]],"type":"MultiPolygon","properties":{"name":"Palestine"}},{"type":null,"properties":{"name":"Fr. Polynesia"}},{"arcs":[[575,576]],"type":"Polygon","properties":{"name":"Qatar"}},{"arcs":[[577,578,-94,579,-380,580,-491]],"type":"Polygon","properties":{"name":"Romania"}},{"arcs":[[[581]],[[-565,582,-563,583,-483]],[[584]],[[585]],[[586]],[[-569,-184,587,-205,-513,-201,-448,588,-61,-339,589,590,-100,-486,-312,591,-310,592,-308,593,-321,-545,594]]],"type":"MultiPolygon","properties":{"name":"Russia"}},{"arcs":[[595,-68,-232,596,-230,597]],"type":"Polygon","properties":{"name":"Rwanda"}},{"arcs":[[-288,-525,598,-489]],"type":"Polygon","properties":{"name":"W. Sahara"}},{"arcs":[[-466,599,-576,600,-28,-552,601,602,-430,-410]],"type":"Polygon","properties":{"name":"Saudi Arabia"}},{"arcs":[[603,-300,-320,604,-137,605,-475,-296]],"type":"Polygon","properties":{"name":"Sudan"}},{"arcs":[[-319,-454,606,-224,-138,-605]],"type":"Polygon","properties":{"name":"S. Sudan"}},{"arcs":[[-505,-347,-351,607,-349,608,-523]],"type":"Polygon","properties":{"name":"Senegal"}},{"type":null,"properties":{"name":"Singapore"}},{"type":null,"properties":{"name":"S. Geo. and S. Sandw. Is."}},{"type":null,"properties":{"name":"Solomon Is."}},{"arcs":[[-474,609,-344]],"type":"Polygon","properties":{"name":"Sierra Leone"}},{"arcs":[[-369,610,-360]],"type":"Polygon","properties":{"name":"El Salvador"}},{"type":null,"properties":{"name":"San Marino"}},{"arcs":[[611,-316,-272,612]],"type":"Polygon","properties":{"name":"Somaliland"}},{"arcs":[[-449,-317,-612,613]],"type":"Polygon","properties":{"name":"Somalia"}},{"arcs":[[-580,-93,-503,-465,-509,-95,-374,-381]],"type":"Polygon","properties":{"name":"Serbia"}},{"type":null,"properties":{"name":"São Tomé and Principe"}},{"arcs":[[-325,-115,-363,614]],"type":"Polygon","properties":{"name":"Suriname"}},{"arcs":[[615,-383,-49,-262,-567]],"type":"Polygon","properties":{"name":"Slovakia"}},{"arcs":[[-376,616,-428,-51,-382]],"type":"Polygon","properties":{"name":"Slovenia"}},{"arcs":[[617,-546,-323]],"type":"Polygon","properties":{"name":"Sweden"}},{"arcs":[[-515,618]],"type":"Polygon","properties":{"name":"Swaziland"}},{"type":null,"properties":{"name":"Sint Maarten"}},{"arcs":[[-412,-435,-425,-472,619,620]],"type":"Polygon","properties":{"name":"Syria"}},{"arcs":[[-606,-142,-211,621,-217,-539,-537,-476]],"type":"Polygon","properties":{"name":"Chad"}},{"arcs":[[-78,622,-340,-82]],"type":"Polygon","properties":{"name":"Togo"}},{"arcs":[[-469,-458,623,-530,624,-507]],"type":"Polygon","properties":{"name":"Thailand"}},{"arcs":[[-455,-198,-6,625]],"type":"Polygon","properties":{"name":"Tajikistan"}},{"arcs":[[-4,-403,626,-446,627,628,629]],"type":"Polygon","properties":{"name":"Turkmenistan"}},{"arcs":[],"type":"MultiPolygon","properties":{"name":"Timor-Leste"}},{"type":null,"properties":{"name":"Tonga"}},{"type":null,"properties":{"name":"Trinidad and Tobago"}},{"arcs":[[-478,-283,632]],"type":"Polygon","properties":{"name":"Tunisia"}},{"arcs":[[[633,-354,-90]],[[-337,-42,-60,-407,-413,-621,634]]],"type":"MultiPolygon","properties":{"name":"Turkey"}},{"arcs":[[635]],"type":"Polygon","properties":{"name":"Taiwan"}},{"arcs":[[636,-451,637,-521,638,-528,639,640,-65,-596,641]],"type":"Polygon","properties":{"name":"Tanzania"}},{"arcs":[[642,-642,-598,-229,643,-227,644,-225,-607,-453]],"type":"Polygon","properties":{"name":"Uganda"}},{"arcs":[[645,-578,-492,-581,-379,-616,-566,-101,-591]],"type":"Polygon","properties":{"name":"Ukraine"}},{"arcs":[[646,-118,647,-35,-120]],"type":"Polygon","properties":{"name":"Uruguay"}},{"arcs":[[[648,-156,649,-154,650,-152,651,-150,-146,652,-144,653,-497,654,-495,655,-500,656,-158]],[[-160,657]]],"type":"MultiPolygon","properties":{"name":"United States"}},{"type":null,"properties":{"name":"USNB Guantanamo Bay"}},{"arcs":[[-440,658,-443,-456,-626,-5,-630,659,-628,-445,660]],"type":"Polygon","properties":{"name":"Uzbekistan"}},{"type":null,"properties":{"name":"Vatican"}},{"type":null,"properties":{"name":"St. Vin. and Gren."}},{"arcs":[[-364,-126,-241,661]],"type":"Polygon","properties":{"name":"Venezuela"}},{"arcs":[[662,-460,-468,-189]],"type":"Polygon","properties":{"name":"Vietnam"}},{"type":null,"properties":{"name":"Vanuatu"}},{"type":null,"properties":{"name":"Akrotiri"}},{"type":null,"properties":{"name":"Samoa"}},{"arcs":[[663,-602,-551]],"type":"Polygon","properties":{"name":"Yemen"}},{"arcs":[[-516,-619,-514,664,-535,-135,665],[-481]],"type":"Polygon","properties":{"name":"South Africa"}},{"arcs":[[-640,-527,-518,666,667,668,-534,-7,-236,669,-234,670]],"type":"Polygon","properties":{"name":"Zambia"}},{"arcs":[[-517,-666,-134,-669,671,-667]],"type":"Polygon","properties":{"name":"Zimbabwe"}}]}},"arcs":[[[8724,8236],[-13,-14]],[[8711,8222],[-65,-13],[-51,-53],[16,-60],[-19,-77],[-41,-1],[-30,-161],[-28,13],[-61,-61],[-7,-74],[-72,-31],[-55,1],[-56,31]],[[8242,7736],[33,66],[-33,45],[-11,145],[26,134]],[[8257,8126],[46,-27],[57,64],[16,63],[60,18]],[[8436,8244],[44,-12]],[[8480,8232],[85,30],[37,43],[16,-107],[50,53],[56,-15]],[[6980,4978],[1,-144],[-69,0],[0,-215],[48,-99]],[[6960,4520],[-65,-25],[-89,14],[-14,27],[-154,-1],[-20,30],[-56,-20]],[[6562,4545],[26,261],[38,78],[8,91],[-30,123],[15,27],[-20,121],[13,72]],[[6612,5318],[107,0],[44,-153],[59,7],[7,68],[77,-20],[0,-138],[24,-116],[50,12]],[[6608,5400],[-30,-76]],[[6578,5324],[-7,50]],[[6571,5374],[37,26]],[[6847,8596],[17,-46]],[[6864,8550],[3,-53]],[[6867,8497],[2,-12]],[[6869,8485],[8,-2]],[[6877,8483],[1,-1],[0,-6]],[[6878,8476],[1,-6],[-34,-67]],[[6845,8403],[-18,33],[-5,113]],[[6822,8549],[2,16]],[[6824,8565],[0,15]],[[6824,8580],[23,16]],[[6219,8592],[-10,7]],[[6209,8599],[10,-7]],[[8087,7450],[3,-44]],[[8090,7406],[-42,-155]],[[8048,7251],[-88,16],[-35,90]],[[7925,7357],[78,-14],[18,14],[58,123]],[[8079,7480],[8,-30]],[[3811,2004],[0,145]],[[3811,2149],[22,-65],[91,-89],[-113,9]],[[4016,4208],[55,-104],[34,-16],[86,-97],[-39,-118],[66,-21],[67,57],[7,73]],[[4292,3982],[24,-7],[3,-96],[-68,-77],[-63,-132]],[[4188,3670],[-20,-154]],[[4168,3516],[-12,-83],[7,-65],[29,-25],[29,-128],[-32,-84],[-112,-57],[-52,13],[2,-141],[-98,-5],[11,-84],[-12,-149],[-62,-62],[-20,-59],[65,-90],[-63,-103],[-52,-156],[21,-69]],[[3817,2169],[-50,23],[-68,1],[-43,84],[-10,97],[62,180],[-2,207],[-15,38],[7,158],[37,137],[-7,150],[44,212],[-28,119],[24,85],[-5,72],[55,209],[-2,106],[39,39],[5,83]],[[3860,4169],[34,69],[56,-28],[66,-2]],[[7700,8510],[21,-28],[30,-134]],[[7751,8348],[-12,-3]],[[7739,8345],[-47,58]],[[7692,8403],[-38,28],[-7,67]],[[7647,8498],[53,12]],[[4608,383],[62,-101],[-364,-46],[135,91],[167,56]],[[3764,1027],[58,-109],[-31,-117],[-109,-8],[-103,68],[151,47],[-35,136],[69,-17]],[[0,0],[580,0],[-67,20],[-19,22],[-177,37],[623,43],[-134,96],[297,94],[-248,49],[-124,80],[80,53],[219,-52],[157,52],[-100,66],[468,99],[234,-4],[440,15],[38,-33],[492,-10],[-138,154],[260,-33],[242,13],[171,-28],[86,21],[137,-40],[289,48],[70,69],[-60,139],[107,103],[65,-29],[71,-106],[19,-77],[-8,-194],[-72,-60],[-238,-70],[-252,-8],[164,-69],[-260,-86],[129,-32],[29,-90],[359,-59],[122,-106],[287,64],[345,2],[151,83],[308,47],[-223,91],[87,103],[266,95],[242,44],[80,121],[177,72],[26,75],[271,4],[74,-35],[93,55],[239,41],[131,8],[174,-20],[41,-26],[243,-8],[223,75],[-14,70],[216,-74],[35,79],[103,49],[197,59],[66,62],[110,32],[96,-65],[213,-57],[181,-13],[71,-47],[-50,-182],[34,-83],[129,179],[152,46],[54,70],[291,90],[237,19],[143,-16],[121,58],[190,-52],[172,58],[196,-112],[240,75],[108,-60],[58,72],[230,-15],[293,-84],[24,-47],[134,-8],[314,-75],[96,-51],[165,-33],[94,-62],[-20,-94],[-83,-7],[-162,-116],[21,-146],[104,-104],[-104,-11],[-147,-103],[77,-87],[214,-86],[41,-37],[106,-10],[81,-27],[153,-14],[-12266,-18]],[[11114,2955],[57,-29],[65,14],[-11,-154],[-68,-21],[-27,73],[-16,117]],[[11039,4989],[35,-183],[60,-105],[2,-93],[25,-91],[11,-94],[73,-67],[34,-152],[43,-27],[1,-60],[36,-38],[42,-128],[-2,-72],[17,-73],[-36,-288],[-30,-42],[-51,-192],[-6,-110],[-77,-33],[-63,-62],[-34,70],[-46,-67],[-75,32],[-54,77],[2,43],[-44,126],[-37,41],[-76,12],[-55,127],[-49,5],[-37,37],[-74,-14],[-58,-40],[-38,4],[-69,-57],[-15,-52],[-134,-10],[-48,-62],[-64,-9],[-53,64],[23,54],[3,102],[-22,78],[-4,77],[-51,195],[25,51],[-28,94],[8,130],[105,128],[97,40],[57,39],[35,103],[18,94],[33,11],[61,132],[43,47],[49,-63],[40,20],[27,101],[40,58],[25,-16],[22,54],[122,-64],[-27,-169],[78,-88],[77,-99],[30,20],[27,154],[-6,81],[23,203],[14,16]],[[6740,9006],[7,-41]],[[6747,8965],[-36,-78]],[[6711,8887],[-82,-22]],[[6629,8865],[-111,24]],[[6518,8889],[-30,12]],[[6488,8901],[-2,15]],[[6486,8916],[1,16]],[[6487,8932],[5,2]],[[6492,8934],[105,7],[36,75]],[[6633,9016],[53,15],[54,-25]],[[7739,8345],[-46,54]],[[7693,8399],[-1,4]],[[7749,8550],[50,-45],[24,44]],[[7823,8549],[32,-83],[-22,-149]],[[7833,8317],[-36,85],[-46,-54]],[[7700,8510],[49,40]],[[7206,5552],[-3,-75],[-28,-64]],[[7175,5413],[-15,76]],[[7160,5489],[-7,41]],[[7153,5530],[53,22]],[[6365,9150],[4,-42]],[[6369,9108],[-11,-38]],[[6358,9070],[-111,103]],[[6247,9173],[28,20]],[[6275,9193],[30,0]],[[6305,9193],[1,0]],[[6306,9193],[59,-43]],[[6283,6506],[7,-86],[-37,-112],[0,-162]],[[6253,6146],[-38,-11]],[[6215,6135],[0,196],[-24,128]],[[6191,6459],[51,61]],[[6242,6520],[41,-14]],[[6168,6723],[25,-124],[49,-79]],[[6191,6459],[-36,9]],[[6155,6468],[-92,-9],[5,-103]],[[6068,6356],[-55,10],[-42,54]],[[5971,6420],[5,94],[66,92],[20,56],[73,73],[33,-12]],[[9329,7202],[-12,-61]],[[9317,7141],[-28,119],[-39,-66],[-42,19]],[[9208,7213],[-33,162],[13,130],[64,-88],[59,3],[-6,-69],[24,-149]],[[7138,8677],[-32,-87],[13,-33]],[[7119,8557],[-58,-18]],[[7061,8539],[-117,-26]],[[6944,8513],[-19,66]],[[6925,8579],[12,131]],[[6937,8710],[106,-34],[42,30],[53,-29]],[[6811,8751],[6,-88]],[[6817,8663],[-25,-66]],[[6792,8597],[-28,22]],[[6764,8619],[-2,4]],[[6762,8623],[-43,76],[-19,75],[111,-23]],[[7123,9517],[94,-37],[-4,-55],[66,-90],[-45,-20],[13,-73]],[[7247,9242],[-73,-42],[-121,30],[-85,-26]],[[6968,9204],[11,80],[-15,83]],[[6964,9367],[70,25],[36,92]],[[7070,9484],[53,33]],[[3138,6966],[0,-125],[-21,-51]],[[3117,6790],[-8,131]],[[3109,6921],[29,45]],[[4170,4349],[-31,59],[-93,-26],[-30,-174]],[[3860,4169],[-23,-1],[-40,296],[-16,65]],[[3781,4529],[16,65]],[[3797,4594],[-11,69]],[[3786,4663],[24,205],[-31,104]],[[3779,4972],[39,-6],[61,77],[37,5],[19,-146],[65,-44],[44,-61],[49,-27],[9,-158],[58,-4],[1,-61],[28,-72],[-19,-126]],[[4446,5705],[57,-9],[-14,-79],[-59,-25],[-5,98],[21,15]],[[4227,5846],[65,26]],[[4292,5872],[65,2],[34,113]],[[4391,5987],[62,-194],[-48,-88],[-32,-81],[61,-48],[52,18],[38,82],[45,-20],[69,-75],[97,-63],[57,4],[50,-58],[47,-84],[62,-30],[18,-120],[-10,-110],[-64,-139],[-48,-145],[-21,-20],[4,-173],[-28,-243],[-80,-240],[-79,1],[-122,-137],[-22,-61],[-3,-161],[-59,-150],[-28,10],[-28,-69],[-25,-131],[-23,-33]],[[4333,3429],[-4,12]],[[4329,3441],[12,61]],[[4341,3502],[-49,81],[-77,92],[-27,-5]],[[4292,3982],[0,9]],[[4292,3991],[11,93]],[[4303,4084],[-40,7],[-15,112],[-71,13],[-7,133]],[[3779,4972],[-37,-3],[-22,68],[-35,32],[-58,134],[30,83],[7,80],[74,67],[27,-6]],[[3765,5427],[20,209],[-23,68],[7,126],[58,1],[30,22],[14,-56]],[[3871,5797],[26,-33],[70,62],[2,151],[64,14],[42,33],[6,42]],[[4081,6066],[27,-9],[12,-74],[-12,-62],[7,-82],[32,-45],[58,57],[22,-5]],[[10101,6046],[-5,-6]],[[10096,6040],[5,6]],[[10062,6026],[33,19]],[[10095,6045],[-33,-19]],[[9296,7594],[9,-64],[-74,-8],[-29,42]],[[9202,7564],[19,50],[75,-20]],[[7024,4509],[30,-115],[27,-36],[37,-104],[47,-43]],[[7165,4211],[-77,-90],[-76,-155],[-66,31],[-44,-102],[-59,142]],[[6843,4037],[0,187],[35,0],[0,250],[146,35]],[[6942,6454],[45,-152]],[[6987,6302],[113,-244]],[[7100,6058],[-109,-10],[-63,-54],[-55,21],[-48,47],[-30,-51],[3,-61]],[[6798,5950],[-67,4],[-17,-88]],[[6714,5866],[-3,40],[-48,121],[2,112],[24,85]],[[6689,6224],[46,1],[61,34],[18,66],[44,7],[47,87],[37,35]],[[3603,8761],[42,30],[11,40],[17,13],[27,30],[6,-2],[40,26],[54,87],[115,66],[48,-26],[-26,-108],[16,-71],[119,-67],[-129,-95],[-47,-1],[7,91],[-41,-1]],[[3862,8773],[-10,30]],[[3852,8803],[-13,10]],[[3839,8813],[0,88],[-48,27],[-35,-104],[-44,-61],[-109,-2]],[[1784,9159],[84,-41],[49,-71],[1,-59],[-90,71],[-44,100]],[[4247,9210],[-8,-99],[16,-52],[76,-8],[-15,-113],[-105,-1],[-83,19],[90,232],[29,22]],[[3234,10170],[20,-40],[11,19],[17,-20],[25,-4],[54,-40],[-128,-96],[-22,70],[-7,28],[7,18],[0,32],[6,28],[17,5]],[[3603,8761],[-37,-34]],[[3566,8727],[-45,-41],[-64,-2],[-2,-40]],[[3455,8644],[-1,-11]],[[3454,8633],[-50,-36],[-72,0]],[[3332,8597],[7,30]],[[3339,8627],[40,109],[43,48],[-25,41],[-116,28]],[[3281,8853],[-12,7]],[[3269,8860],[-12,101],[-56,57],[-92,-20],[-15,-33]],[[3094,8965],[-63,2],[-128,65],[-196,0],[-165,0],[-218,0],[-265,0],[-100,0]],[[1959,9032],[-10,0],[-1,0],[-53,85],[-110,66],[-1,67],[-34,87],[-42,30],[1,133]],[[1709,9500],[-68,76],[-118,187],[-73,-40],[-53,59],[-63,17],[0,632]],[[1334,10431],[145,-52],[208,85],[212,-50],[98,27],[124,-52],[70,-15],[2,14],[47,-20],[23,-69],[141,2],[49,60],[33,6],[39,16],[14,-3],[12,-13],[4,-24],[29,-21],[101,-25],[151,7],[100,33],[-15,33],[14,40],[-3,7],[-76,46],[4,80],[64,47],[103,-126],[87,-58],[34,-32],[19,-98],[53,50],[8,43],[31,0],[-12,15],[13,9],[-11,47],[81,-6],[39,-47],[-15,-6],[25,-6],[1,-12],[-9,-111],[-129,-49],[-43,-41],[-29,-23],[-19,0],[-60,41],[-9,-10],[30,-31],[69,-6],[3,-13],[-37,-55],[-52,-17],[-64,-82],[-75,-63],[-41,-125],[0,-67],[56,-17],[26,-89],[122,-40],[51,-61],[79,-45],[94,-14],[1,-145],[64,-110],[63,52],[-35,172],[85,71],[20,95],[-66,109],[30,92],[-19,153],[146,11],[138,-132],[13,-112],[63,-43],[54,31],[54,109],[62,-144],[44,-72],[-5,-75],[34,-60],[92,-26],[66,-90],[10,-81],[-47,-53],[-50,-7],[-51,-72],[-223,1],[-32,-64],[-58,-37],[-29,-70],[-20,-23],[-7,-20],[-21,-27],[-19,-1],[-26,-28],[-12,-5],[-32,-47],[-27,-36]],[[2251,10678],[221,-78],[66,58],[62,-150],[84,-45],[-44,-49],[36,-26],[-23,-9],[-30,-6],[-60,7],[5,14],[-67,8],[-21,-15],[-34,-7],[-15,-11],[-142,-16],[-19,22],[2,26],[-131,55],[-59,113],[62,84],[107,25]],[[3197,10716],[173,-9],[89,-98],[128,15],[31,-51],[203,-78],[11,-109],[6,-13],[12,-17],[26,-27],[80,-25],[72,-132],[-97,-27],[-30,47],[-48,12],[11,-56],[12,-46],[2,17],[73,-92],[-96,-105],[-146,68],[-63,100],[-155,-13],[-5,32],[6,11],[22,9],[-4,18],[79,-13],[98,128],[-25,74],[-28,6],[-36,33],[2,18],[-11,-13],[-12,2],[-40,7],[36,14],[-105,50],[-119,-12],[-224,46],[-50,99],[37,89],[85,41]],[[2744,10718],[91,-3],[21,-135],[-91,-34],[-49,57],[28,115]],[[2985,10731],[21,-91],[-118,-3],[12,90],[85,4]],[[2000,10763],[141,-21],[72,-48],[-169,-87],[-97,-79],[-91,70],[144,165]],[[2792,10907],[35,-82],[-179,2],[20,61],[124,19]],[[2441,10917],[91,-120],[-255,-43],[-144,56],[118,84],[101,-65],[89,88]],[[2900,10930],[131,-22],[159,-83],[195,22],[28,-83],[-217,-7],[-187,23],[-1,72],[-108,78]],[[2985,11222],[174,-63],[38,-91],[-188,-57],[-160,131],[136,80]],[[3775,11343],[287,-62],[-456,-244],[-168,-154],[-321,6],[79,162],[27,117],[-177,89],[729,86]],[[6475,8941],[12,-9]],[[6486,8916],[2,-15]],[[6518,8889],[-17,-35],[-100,-30]],[[6401,8824],[-9,34]],[[6392,8858],[-19,-8]],[[6373,8850],[46,87]],[[6419,8937],[56,4]],[[3811,2004],[0,-1],[0,-7],[-46,42],[-16,85],[62,26]],[[3817,2169],[-26,10],[-98,-101],[-51,68],[-27,177],[-9,169],[-17,92],[54,50],[30,203],[-43,103],[25,120],[-16,111],[23,57],[47,218],[7,76],[-10,101],[34,279],[7,200],[15,149],[-11,221]],[[3751,4472],[30,57]],[[9947,7079],[-9,-100],[-24,-32],[-36,70],[36,52],[33,10]],[[10706,8766],[-28,11]],[[10678,8777],[-34,-23],[9,-97],[-26,-64]],[[10627,8593],[-86,-36],[-124,-127]],[[10417,8430],[-93,-68],[21,93],[-31,31],[-70,-81],[-17,-107],[16,-69],[49,48],[44,-58],[-45,-37],[-51,-113],[36,-31],[38,-130],[0,-140],[19,-46],[-25,-87],[-87,-257],[-82,-109],[-70,-27]],[[10069,7242],[-5,-2]],[[10064,7240],[-84,-67],[-64,-12],[-60,8]],[[9856,7169],[-46,33],[-47,91],[-33,-43],[-75,-19]],[[9655,7231],[-33,-57]],[[9622,7174],[-33,-8],[-34,45],[5,70],[-63,108],[29,57],[11,138],[-46,41]],[[9491,7625],[-40,78],[-52,-3],[-67,-92],[-36,-14]],[[9202,7564],[-26,37]],[[9176,7601],[-59,3],[-45,26],[-119,144],[-22,-14]],[[8931,7760],[-76,74],[26,96],[-59,188]],[[8822,8118],[-36,11]],[[8786,8129],[-25,55],[-50,38]],[[8724,8236],[-5,86],[-39,63]],[[8680,8385],[41,73],[51,-11],[17,45],[116,78]],[[8905,8570],[19,63],[-23,131],[74,14],[26,133],[60,-26],[31,26],[0,77],[55,50]],[[9147,9038],[19,6]],[[9166,9044],[4,-40],[72,-48],[32,-78],[-12,-84],[105,-40],[58,-41],[33,-106],[183,-17],[67,-48],[52,0],[54,35],[94,13],[83,86],[-6,87],[62,-19],[73,49],[30,58],[109,53],[-69,60]],[[10190,8964],[-9,-16]],[[10181,8948],[-68,24],[40,116]],[[10153,9088],[37,-21],[50,63],[50,100],[5,91],[83,21],[85,-40],[80,-232],[61,-26],[37,-99],[55,0],[63,46],[-16,-144],[-37,-81]],[[6068,6356],[6,-87],[-25,-96],[14,-111]],[[6063,6062],[-62,12],[-99,-66]],[[5902,6008],[4,102],[-31,62],[-5,54]],[[5870,6226],[18,63],[-1,113]],[[5887,6402],[32,-1],[27,40],[25,-21]],[[6656,6593],[20,-60],[13,-133],[-51,-33],[38,-67],[13,-76]],[[6714,5866],[-99,-6]],[[6615,5860],[-67,1]],[[6548,5861],[-52,12]],[[6496,5873],[4,60],[-46,107]],[[6454,6040],[9,71],[32,62],[72,22],[11,87],[61,196],[21,15],[-19,107]],[[6641,6600],[9,0]],[[6650,6600],[6,-7]],[[7276,8096],[0,1],[1,0],[1,0]],[[7278,8097],[-2,-1]],[[7313,8086],[1,-2]],[[7314,8084],[-35,13]],[[7279,8097],[34,-11]],[[7100,6058],[30,-54],[50,20],[35,-73]],[[7215,5951],[15,-90]],[[7230,5861],[-27,-63]],[[7203,5798],[-27,-91]],[[7176,5707],[-1,-26]],[[7175,5681],[-3,-61]],[[7172,5620],[-12,-20]],[[7160,5600],[-12,-54]],[[7148,5546],[5,-16]],[[7160,5489],[-1,-176],[48,-156]],[[7207,5157],[-58,-18]],[[7149,5139],[-12,-60]],[[7137,5079],[4,-89],[-12,-118],[-102,53],[-47,53]],[[6612,5318],[-34,6]],[[6608,5400],[44,24],[11,-41],[52,103],[-1,80],[53,111],[11,183],[20,90]],[[6571,5374],[-31,73]],[[6540,5447],[30,42],[-9,62],[93,35],[2,87],[-21,55],[14,76],[-34,56]],[[3719,6516],[-24,-15],[-31,-79],[-2,-78],[21,-63],[10,-88],[69,-11],[22,-54],[64,11],[-9,-138],[18,-55],[14,-149]],[[3765,5427],[-25,31],[22,78],[-57,34],[-20,-21],[-101,158]],[[3584,5707],[-35,38],[-39,-4],[-48,70]],[[3462,5811],[14,79],[39,60],[-7,182],[-14,72]],[[3494,6204],[25,48],[-7,49]],[[3512,6301],[59,51],[5,79],[45,50],[31,-2],[46,66],[21,-29]],[[3297,6454],[37,-92]],[[3334,6362],[-11,-104]],[[3323,6258],[-25,69],[-50,34],[-26,46],[5,58]],[[3227,6465],[70,-11]],[[3590,7062],[-1,5],[-1,0],[-2,-5],[-97,54],[-24,64],[-106,41],[-14,63],[75,-15],[106,-101],[77,-58],[-13,-48]],[[7324,8089],[-4,0]],[[7320,8089],[-7,-3]],[[7279,8097],[45,-8]],[[7324,8089],[-4,-7]],[[7320,8082],[0,7]],[[7320,8089],[4,0]],[[7314,8084],[0,-1]],[[7314,8083],[-23,-24],[-10,2],[-5,35]],[[7278,8097],[1,0]],[[6667,9159],[81,-33],[57,-59]],[[6805,9067],[-65,-61]],[[6633,9016],[-41,47],[-4,63],[79,33]],[[6484,9426],[59,-53],[62,28],[44,-50]],[[6649,9351],[18,-192]],[[6492,8934],[-17,7]],[[6419,8937],[8,69],[-49,57]],[[6378,9063],[-9,45]],[[6365,9150],[41,170]],[[6406,9320],[60,45],[-10,67]],[[6456,9432],[28,-6]],[[7640,6492],[-11,-33]],[[7629,6459],[-39,6]],[[7590,6465],[0,14]],[[7590,6479],[21,80]],[[7611,6559],[25,16]],[[7636,6575],[4,-83]],[[6456,9432],[-18,114],[79,67],[-8,-116],[-25,-71]],[[3704,6936],[-5,31]],[[3699,6967],[-1,2],[-2,5]],[[3696,6974],[8,75]],[[3704,7049],[64,-5],[33,-83],[-57,0],[-40,-25]],[[6454,8216],[-14,-160],[-24,-50],[54,-119],[16,-125]],[[6486,7762],[11,-86],[0,-167],[-16,-22],[22,-91],[53,-39],[14,-50]],[[6570,7307],[-157,-185],[-50,-85],[-58,-27]],[[6305,7010],[-106,110],[1,22],[-142,182],[-62,83]],[[5996,7407],[-133,155]],[[5863,7562],[0,26]],[[5863,7588],[0,69],[36,47],[65,16],[71,74],[0,63],[39,33],[44,-3],[-19,181],[-15,22]],[[6084,8090],[112,95],[122,28],[136,3]],[[3584,5707],[-10,-90],[-38,-77],[-40,-28],[-41,-135],[-44,107]],[[3411,5484],[-15,137],[23,149],[43,41]],[[7330,7835],[2,-7]],[[7332,7828],[21,-117]],[[7353,7711],[-29,-193],[50,-182],[14,-82],[34,-51]],[[7422,7203],[-96,0],[-167,0],[-144,0]],[[7015,7203],[0,495],[-10,56],[16,104]],[[7021,7858],[149,-48],[55,45],[56,-39],[49,19]],[[7611,6559],[-56,114],[-98,49],[-47,-42]],[[7410,6680],[-4,60],[19,129],[57,65]],[[7482,6934],[28,-168],[59,-60],[67,-131]],[[7320,8082],[-4,1],[-2,0]],[[6099,8652],[59,-47],[51,-6]],[[6219,8592],[50,-6]],[[6269,8586],[1,-34],[-76,-59],[-46,-105],[20,-51],[-73,-121],[-86,-14],[-32,-40],[-70,71]],[[5907,8233],[2,155],[15,30],[11,138],[-75,1]],[[5860,8557],[-17,73],[48,47],[106,-24],[102,-1]],[[7119,9742],[5,-8]],[[7124,9734],[-6,-1],[4,-1],[-9,-11]],[[7113,9721],[-5,-12]],[[7108,9709],[-2,-67]],[[7106,9642],[-10,-31]],[[7096,9611],[-104,22]],[[6992,9633],[-29,92],[76,30],[80,-13]],[[7590,6479],[0,-14]],[[7629,6459],[-9,-26],[46,-111],[101,-67],[35,0]],[[7802,6255],[-105,-209],[-33,4],[-70,-66]],[[7594,5984],[-39,21],[-41,-60],[-50,14],[-43,55],[-32,13]],[[7389,6027],[-41,139],[-53,118],[33,11],[-2,59]],[[7326,6354],[34,159],[37,83],[13,84]],[[7151,10389],[-17,-8],[10,-11],[-10,-14],[9,-24],[44,-33],[-32,-58],[30,-53],[-7,-28],[3,-38],[5,-92],[43,-84],[-117,-131]],[[7112,9815],[-157,-48],[-66,81],[-3,124],[145,141],[-5,16],[2,20],[-41,23]],[[6987,10172],[-17,143],[-28,31],[-26,5],[-51,38]],[[6865,10389],[36,15],[26,-36],[52,7],[33,-18],[9,16],[22,14],[108,2]],[[4292,5872],[20,87],[-17,88],[11,30]],[[4306,6077],[43,3],[42,-93]],[[6358,9070],[20,-7]],[[6373,8850],[19,8]],[[6401,8824],[-3,-113],[19,-31]],[[6417,8680],[-2,-3],[-3,-1],[-42,-46],[-74,34],[-27,-78]],[[6099,8652],[19,72],[5,123],[-113,164],[96,5],[17,43],[91,56],[33,58]],[[6540,5447],[-64,144],[-16,69],[36,121]],[[6496,5781],[52,0],[0,80]],[[5945,9378],[-33,66]],[[5912,9444],[33,-66]],[[6046,9686],[1,-62],[53,-17],[-29,-96],[33,-32],[75,-178],[42,-33],[-28,-107],[-197,-22],[33,71],[-11,109],[43,34],[-101,200],[29,132],[57,1]],[[7647,8498],[-66,27]],[[7581,8525],[-1,80],[-52,47]],[[7528,8652],[23,11],[108,-53],[38,0],[52,-60]],[[6155,6468],[23,-116],[-1,-166],[23,-59]],[[6200,6127],[-108,-92],[-38,24],[0,1],[9,2]],[[5770,6554],[26,-34],[51,39],[40,-157]],[[5870,6226],[-62,62]],[[5808,6288],[-32,103],[-44,-9],[-27,-56]],[[5705,6326],[-59,130]],[[5646,6456],[44,50],[0,67]],[[5690,6573],[80,-19]],[[5587,6599],[7,35]],[[5594,6634],[-7,-35]],[[5646,6456],[-58,93]],[[5588,6549],[102,24]],[[6496,5781],[0,92]],[[6883,8482],[61,31]],[[7061,8539],[-9,-66]],[[7052,8473],[-56,13],[-64,-60],[9,-55],[43,-69],[-47,-94],[-38,15],[-30,135],[-24,45]],[[6878,8476],[5,6]],[[5058,11377],[561,-121],[151,-25],[-340,-230],[92,-92],[-25,-99],[-95,-76],[-107,-44],[25,-72],[90,-45],[-115,-90],[77,-44],[-89,-60],[-38,-12],[-16,-11],[-97,-29],[-67,-4],[-103,-120],[-149,-38],[-15,-32],[-17,-17],[-10,-21],[2,-67],[-70,-73],[15,-40],[-33,-132],[-52,-7],[-56,67],[-75,11],[-90,139],[-31,110],[-28,59],[-15,0],[-23,100],[7,45],[43,25],[-6,23],[45,15],[8,26],[20,13],[-16,93],[-134,106],[3,50],[-125,185],[-135,34],[-212,-8],[-147,139],[274,90],[-90,56],[207,97],[509,77],[492,49]],[[3117,6790],[24,-11]],[[3141,6779],[-40,-89]],[[3101,6690],[-24,-47]],[[3077,6643],[-74,56]],[[3003,6699],[44,222],[62,0]],[[4200,6086],[-27,-100],[54,-140]],[[4081,6066],[-22,51],[24,55],[22,122]],[[4105,6294],[33,-37],[66,-131],[-4,-40]],[[10069,7242],[-5,-2]],[[3316,6729],[-126,-86],[-18,-50]],[[3172,6593],[-18,29]],[[3154,6622],[2,34],[-55,34]],[[3141,6779],[80,17],[54,-10],[41,-57]],[[6792,8597],[1,-11]],[[6793,8586],[-29,33]],[[6725,8864],[47,-50],[34,11]],[[6806,8825],[5,-74]],[[6762,8623],[-73,64],[-21,80],[-43,27]],[[6625,8794],[72,24],[28,46]],[[3696,6974],[3,-7]],[[3704,6936],[-33,26],[-2,102],[35,-15]],[[6917,8992],[26,-31]],[[6943,8961],[-63,-116],[-27,-8]],[[6853,8837],[-47,-12]],[[6725,8864],[-14,23]],[[6747,8965],[20,-17],[150,44]],[[10440,5072],[-36,10]],[[10404,5082],[15,10]],[[10419,5092],[16,16]],[[10435,5108],[5,-36]],[[9793,5307],[75,-16],[9,-35],[59,-14],[11,31],[67,-24],[22,-96],[-78,2],[-55,37],[-53,-2],[-45,22],[-12,95]],[[10985,5538],[0,-256],[0,-185]],[[10985,5097],[-65,105],[-25,116],[-34,55],[-74,39],[-43,42],[-23,-15],[-33,77],[-36,143],[50,31],[43,-25],[7,-109],[45,-70],[31,78],[48,49],[69,-60],[40,-15]],[[10440,5827],[-20,-82],[-141,0],[-13,-45],[24,-81],[28,37],[46,-4],[-36,-89],[22,-69],[-31,-67],[-38,67],[1,-155],[-37,7],[9,96],[-27,47],[16,141],[24,133],[31,43],[94,-34],[48,55]],[[10189,5997],[6,-2],[-6,2]],[[10184,5995],[-10,-63],[18,-81],[-11,-184],[-33,-53],[-19,-144],[-46,-5],[-55,35],[-93,11],[-8,109],[-33,57],[-2,141],[21,37]],[[9913,5855],[29,-83],[85,48],[51,-9],[34,108],[11,89],[61,-13]],[[9428,6094],[69,-24],[25,-73],[52,-67],[22,-59],[60,-65],[10,-40],[44,-32],[-4,-84],[27,-6],[16,-85],[26,-7],[8,-72],[-2,-161],[-58,26],[-63,102],[-43,100],[-31,130],[-33,55],[-16,101],[-35,42],[-27,88],[-47,70],[0,61]],[[8931,7760],[-34,-90],[94,-93],[47,0],[60,-63],[74,-14],[4,101]],[[9491,7625],[-21,-58],[-56,-51],[-16,-127],[-31,-49],[-38,-138]],[[9208,7213],[-67,-43],[-2,-55],[-56,-68],[-45,-95],[-99,-132],[-39,-84],[8,-113],[-13,-88],[-1,-123],[-83,-151],[-31,56],[-24,149],[-23,62],[-28,171],[-36,130],[-22,221],[-2,104],[-56,-38],[-69,104],[10,41],[-37,68]],[[8493,7329],[19,31],[81,7],[-32,144],[-3,85],[62,12],[117,283],[-44,70],[-3,101],[58,-12],[49,42]],[[8797,8092],[25,26]],[[5945,9378],[-2,-130],[-80,-42],[-30,73],[-12,105],[91,60]],[[7833,8317],[3,-45],[100,-81],[69,52]],[[8005,8243],[53,50],[54,7],[61,-34],[84,-140]],[[8242,7736],[65,-126],[15,-92],[-46,-28],[-8,-69]],[[8268,7421],[-88,13],[-59,27],[-17,92],[-68,-44],[-38,14],[-43,64],[-36,18],[-49,156],[-50,-18]],[[7820,7743],[-28,71],[5,51],[-62,90],[-21,93],[26,51],[-48,131]],[[7692,8230],[-19,135],[20,34]],[[7820,7743],[-19,2]],[[7801,7745],[-48,-61]],[[7753,7684],[-63,7],[-90,128],[-58,58],[-42,12]],[[7500,7889],[-14,86]],[[7486,7975],[76,68],[11,109],[37,76]],[[7610,8228],[82,2]],[[5611,10220],[86,-92],[-16,-29],[-18,-23],[-145,-68],[-113,44],[-12,51],[-28,9],[18,9],[31,-2],[-26,8],[27,19],[143,36],[53,38]],[[7384,7931],[-7,-23]],[[7377,7908],[-5,-61]],[[7372,7847],[0,-11]],[[7372,7836],[0,-7]],[[7372,7829],[1,-10]],[[7373,7819],[-17,-103]],[[7356,7716],[-3,-5]],[[7332,7828],[8,26]],[[7340,7854],[22,101]],[[7362,7955],[23,22]],[[7385,7977],[-1,-46]],[[6695,8305],[-29,-106],[-62,59],[91,47]],[[6476,8506],[20,-47],[-12,-95],[-37,5],[-5,113],[34,24]],[[6629,8865],[0,-64]],[[6629,8801],[-44,-10],[7,-95],[49,-97],[102,-102],[-43,-81],[-71,93],[-37,13],[-73,101],[-13,73],[-47,27],[-42,-43]],[[7500,7889],[-75,-42],[34,-68],[-65,-88],[-38,11]],[[7356,7702],[0,14]],[[7373,7819],[-1,10]],[[7372,7836],[5,29]],[[7377,7865],[0,43]],[[7384,7931],[36,-28],[66,72]],[[10643,8010],[31,-62],[-18,-109],[-23,-22],[-39,146],[49,47]],[[10994,8515],[29,-123],[-36,-83],[-6,-178],[-138,-63],[-30,-79],[-50,80],[-67,-39],[3,85],[103,2],[38,94],[50,20],[42,66],[30,212],[32,6]],[[11020,8791],[47,-75],[48,-29],[-53,-134],[-52,47],[-34,-58],[-32,31],[26,77],[38,40],[12,101]],[[8797,8092],[-11,37]],[[8195,8771],[-25,22]],[[8170,8793],[25,-22]],[[8905,8570],[-58,47],[-114,-1],[-61,-19],[-57,16],[-27,-37]],[[8588,8576],[-65,-59],[-78,-18],[-23,126],[-56,39],[-85,-5],[-65,92]],[[8216,8751],[0,40],[-51,7]],[[8165,8798],[-90,-37],[0,-249]],[[8075,8512],[-60,68],[-60,-38]],[[7955,8542],[10,67],[-51,28],[-14,100],[57,53],[24,82],[-69,33],[-67,-54]],[[7845,8851],[-41,97],[-54,44],[15,96],[118,102],[101,11],[80,-64],[30,36],[70,-1],[42,-35],[57,20],[-14,102],[17,109],[227,69],[52,24],[52,-68],[69,-51],[112,29],[50,-56],[67,-158],[133,3],[50,-88],[69,-34]],[[7594,5984],[-32,-79],[1,-252],[18,-54]],[[7581,5599],[-46,-72],[-34,-130]],[[7501,5397],[-49,70],[-2,39],[-124,137]],[[7326,5643],[-2,88]],[[7324,5731],[33,95],[-1,55],[-33,119]],[[7323,6000],[49,54],[17,-27]],[[8680,8385],[-149,4],[57,50]],[[8588,8439],[63,30],[-63,107]],[[9735,6420],[-29,6],[-24,76]],[[9682,6502],[-15,69],[15,105],[78,10]],[[9760,6686],[79,24]],[[9839,6710],[2,-142],[-53,-56],[-9,-53],[-44,-39]],[[10495,8276],[58,53]],[[10553,8329],[38,-127],[-12,-111],[-95,4],[11,181]],[[6898,8576],[-34,-26]],[[6847,8596],[10,17]],[[6857,8613],[41,-37]],[[7818,7647],[-65,37]],[[7801,7745],[17,-98]],[[9655,7231],[35,-105],[49,-12],[20,-138],[19,-66],[57,-117],[4,-83]],[[9760,6686],[15,90],[-30,57],[2,57],[-28,64],[-100,-58],[4,136],[-37,58]],[[9586,7090],[36,84]],[[7362,7955],[30,106]],[[7392,8061],[-7,-84]],[[5902,6008],[-60,56],[-74,118]],[[5768,6182],[40,106]],[[7015,7203],[0,-135],[-34,-33]],[[6981,7035],[-140,135],[-134,132],[-34,-31]],[[6673,7271],[-103,36]],[[6486,7762],[20,80],[49,68],[-1,52]],[[6554,7962],[125,-53],[20,-70],[56,-20],[54,-55],[39,45],[-2,82],[54,53],[121,-86]],[[8915,6364],[29,-73],[15,-130],[-42,-46],[-25,65],[3,138],[20,46]],[[7144,3770],[13,-82],[-46,-47],[-20,41],[18,74],[35,14]],[[6964,9367],[-25,28]],[[6939,9395],[-51,60]],[[6888,9455],[-8,57]],[[6880,9512],[133,21],[57,-49]],[[7096,9611],[27,-94]],[[6880,9512],[0,50],[50,63],[62,8]],[[5976,8148],[1,-6],[33,-47],[50,11],[1,-3],[23,-13]],[[5863,7588],[-3,-35],[-74,-10],[-28,-62],[-10,-4],[-9,-62],[-58,-108],[-25,-137],[-78,-6]],[[5578,7164],[6,49],[68,183],[23,108],[42,103],[49,25],[58,103],[2,115],[43,118],[58,51],[32,120],[17,9]],[[7125,8793],[2,81],[-56,109]],[[7071,8983],[75,-11],[39,-88],[-60,-91]],[[7849,4896],[26,-104],[13,-109],[-37,-140],[3,-34],[-32,-188],[-48,-294],[-69,-46],[-39,40],[-27,187],[43,160],[-19,157],[18,93],[64,38],[51,69],[3,70],[31,15],[19,86]],[[2693,7721],[9,-12]],[[2702,7709],[54,-162]],[[2756,7547],[10,-33]],[[2766,7514],[69,-41]],[[2835,7473],[-17,-98],[-7,-131],[9,-74],[61,-187],[45,-40],[105,50],[23,31],[14,112],[81,41],[42,-31],[-23,-63],[-8,-97],[-22,-20]],[[3003,6699],[-48,88],[-42,40],[-56,-53],[-108,71],[-127,107],[-54,70],[-25,71],[17,74],[-18,74],[-44,97],[-83,122],[0,60],[-38,48],[-56,108],[-29,148],[-63,44],[7,-112],[35,-58],[34,-111],[37,-64],[8,-60],[34,-101],[-60,29],[1,65],[-42,69],[-41,32],[14,83],[-55,89],[-50,188]],[[2151,7917],[80,-2],[129,-79],[97,0],[57,31],[56,-83],[13,-61],[48,-46],[14,52],[48,-8]],[[6883,8482],[-5,1],[-1,0]],[[6869,8485],[-2,12]],[[6898,8576],[27,3]],[[6305,7010],[-1,-184],[-24,-72],[-75,-5],[-37,-26]],[[5770,6554],[-29,161]],[[5741,6715],[25,57],[26,-13],[179,4],[-19,331],[-18,313],[62,0]],[[9586,7090],[-78,-50],[-5,-121],[34,-103],[-15,-100],[30,-62],[18,-140],[-31,-99]],[[9539,6415],[-2,154],[-30,151],[-21,148],[-61,-89],[-40,16],[6,159],[-74,187]],[[6817,8663],[40,-50]],[[6824,8580],[0,-3],[-2,0],[2,-12]],[[6822,8549],[-29,37]],[[10181,8948],[9,16]],[[9166,9044],[156,114],[77,-57],[117,0],[-9,67],[37,77],[114,-55],[2,-51],[59,-29],[91,13],[64,-69],[73,-13],[83,31],[37,46],[86,-30]],[[7286,3896],[-27,0]],[[7259,3896],[-5,60]],[[7254,3956],[1,103],[-24,137]],[[7231,4196],[39,75],[19,192],[-1,121],[-87,71]],[[7201,4655],[-7,44],[103,66]],[[7297,4765],[38,-26],[-4,-96],[31,-69],[23,55],[2,94],[-34,76]],[[7353,4799],[4,131]],[[7357,4930],[84,-9],[81,52],[22,32]],[[7544,5005],[14,-268],[-33,-135],[-93,-90],[-79,-143],[25,-208],[-16,-114],[-76,-64],[0,-87]],[[5741,6715],[-42,93],[-30,33],[-68,-9],[-7,-47]],[[5594,6785],[17,125],[-17,117],[11,61],[-28,33]],[[5577,7121],[2,38],[136,0],[-5,101],[39,43],[0,172],[114,0],[0,87]],[[7320,5056],[12,-45],[-7,-114],[9,-86],[19,-12]],[[7297,4765],[5,100],[-15,212]],[[7287,5077],[33,-21]],[[9653,6138],[48,-98],[-4,-222],[-70,88],[-21,73],[-20,172]],[[9586,6151],[67,-13]],[[9913,5855],[40,-35],[27,87],[50,25],[32,94]],[[10095,6045],[1,-5]],[[10101,6046],[58,140],[53,-79],[9,-93],[-37,-19]],[[6960,4520],[64,-11]],[[6843,4037],[2,-245],[-30,-39],[-91,26]],[[6724,3779],[-25,36],[-27,115],[-17,151],[1,112],[-38,110],[-56,242]],[[6673,7271],[6,-102],[28,-75],[-18,-237],[-69,-169],[5,-46]],[[6625,6642],[-50,-41],[-51,19],[-34,-39],[-53,34],[-35,-21],[-52,60],[-49,-27],[-18,-121]],[[6625,6642],[16,-42]],[[6454,6040],[-85,-36],[-58,141],[-58,1]],[[3316,6729],[-26,-242],[7,-33]],[[3227,6465],[-55,128]],[[6275,9193],[30,0]],[[6306,9193],[16,108],[84,19]],[[7215,10442],[-64,-53]],[[6865,10389],[-17,0],[9,-9],[-14,-24],[0,-13],[-108,-29],[-14,-60],[-64,-61],[0,-56],[-6,-14],[-25,-35],[-55,-88],[17,-214],[-37,-77]],[[6551,9709],[-33,18],[-79,-78],[-55,0],[-46,90],[26,35],[-35,114],[163,135],[72,78],[5,20],[23,4],[-12,7],[12,14],[23,53],[32,51],[36,72],[74,47],[7,26],[18,24],[220,89],[125,20],[88,-86]],[[6736,11124],[73,-96],[-56,-100],[-101,14],[-125,160],[209,22]],[[12077,2971],[47,-84],[-51,-124],[-49,-46],[-19,-110],[-36,-44],[-102,21],[8,74],[45,66],[85,84],[45,138],[27,25]],[[12084,3383],[43,-52],[21,-118],[114,-109],[-48,-57],[0,-48],[-56,-13],[-51,60],[28,39],[9,71],[-60,173],[0,54]],[[7977,6841],[-38,160]],[[7939,7001],[103,67],[22,138],[-16,45]],[[8090,7406],[27,-71],[56,-32],[34,-83],[-44,-124],[-23,-9],[-4,-90],[-41,-56],[-38,-19],[-14,-56],[-66,-25]],[[8079,7480],[8,-30]],[[8493,7329],[-28,15],[-31,103],[-26,-17],[-140,-9]],[[3494,6204],[-21,95],[-32,26],[-35,-54],[2,-66],[-62,74],[-23,-21]],[[3334,6362],[11,-38],[48,-9],[43,50],[39,-13],[37,-51]],[[3786,4663],[9,-48],[5,1],[-3,-22]],[[3751,4472],[-37,71],[-127,131],[-25,47],[-9,76],[-50,152],[-46,209],[-64,167],[-14,101],[32,58]],[[10460,6365],[23,-56],[10,-103],[-41,-114],[-47,59],[0,78],[55,136]],[[10298,6972],[43,-31],[10,-85],[-37,-108],[13,-74],[-24,-38],[-34,86],[12,86],[0,120],[17,44]],[[10985,5538],[122,-84],[43,-67],[-2,-44],[61,-36],[-13,-97],[34,-41],[15,-69],[39,-85],[-69,15],[-56,136],[-54,19],[-31,-29],[-33,-74],[-56,15]],[[6831,9402],[0,-1]],[[6831,9401],[5,-1]],[[6836,9400],[103,-5]],[[6968,9204],[17,-69],[-53,-97]],[[6932,9038],[-32,23],[-95,6]],[[6649,9351],[-3,11],[0,5],[141,61],[44,-26]],[[10627,8593],[6,-16]],[[10633,8577],[-35,-45],[2,-53],[-81,-99],[34,-51]],[[10495,8276],[-61,36],[19,70],[-36,48]],[[5907,8233],[-48,16],[-24,87],[29,154],[-4,67]],[[4303,4084],[-11,-93]],[[7330,7835],[10,19]],[[7377,7865],[-5,-18]],[[7913,7382],[-14,8]],[[7899,7390],[14,-8]],[[7125,8793],[50,-16]],[[7175,8777],[-37,-100]],[[6937,8710],[-47,41],[-37,86]],[[6943,8961],[69,-16],[59,38]],[[11049,9391],[43,-343],[-37,-4],[-17,-86],[23,-81],[-48,-12],[10,292],[-11,171],[37,63]],[[6836,9400],[-5,1]],[[6831,9402],[46,56],[1,0],[10,-3]],[[8053,10681],[19,-183],[-75,16],[-45,126],[101,41]],[[10920,10868],[216,-39],[-211,-59],[-71,33],[66,65]],[[8493,10927],[4,-46],[-314,-106],[-82,-99],[-97,34],[108,111],[381,106]],[[10678,8777],[28,-11]],[[7845,8851],[-55,-40],[-19,-64],[14,-120],[38,-78]],[[7528,8652],[-95,109],[35,143]],[[7468,8904],[53,48],[14,103],[-94,75],[-62,-7],[-48,70],[-18,67],[-66,-18]],[[7106,9642],[2,67]],[[7113,9721],[11,13]],[[7119,9742],[-7,73]],[[7215,10442],[42,11],[57,-43],[71,-9],[65,-33],[115,-72],[4,-57],[-90,-51],[-95,20],[-43,-63],[16,-55],[84,-56],[73,52],[28,26],[-23,35],[139,123],[95,-31],[44,54],[32,8],[69,43],[52,17],[39,21],[19,-3],[8,-45],[59,29],[47,-6],[22,20],[31,10],[19,-16],[8,-29],[43,39],[0,12],[-27,33],[21,18],[91,-11],[49,-26],[76,-34],[64,-11],[9,22],[-40,36],[-43,16],[19,51],[-24,40],[80,110],[135,-28],[4,-56],[263,74],[-6,70],[187,46],[111,85],[288,37],[243,112],[110,-66],[188,-40],[4,-58],[-189,-112],[375,-10],[149,12],[208,-43],[9,-131],[87,40],[178,-23],[135,102],[281,-47],[103,-90],[114,18],[128,-28],[4,-61],[144,0],[100,-19],[26,19],[22,-38],[36,-9],[8,-22],[27,5],[21,14],[-17,72],[205,-23],[87,-32],[21,-19],[-12270,-18],[4,-14],[298,-169],[-35,-39],[-40,4],[5,-32],[-33,-27],[-95,19],[-5,34],[-115,13],[-8,-27],[12299,-13],[-12,-16],[-26,-61],[29,-87],[-86,-2],[-193,-122],[-172,-19],[-94,-31],[-55,-125],[26,-58],[-22,-176],[-71,-38],[-73,-174],[-48,-24],[-33,272],[19,106],[95,102],[175,201],[-108,-34],[-66,74],[-50,-8],[-155,-194],[-114,56],[-70,-35],[-150,8],[-75,-63],[-113,-156],[-83,-81],[54,-19],[37,-71],[59,45],[62,-76],[0,-81],[-26,-46],[-18,-190],[-85,-179],[-87,-157],[-67,-55],[-42,42],[-43,-70]],[[7203,5641],[3,-89]],[[7148,5546],[12,54]],[[7172,5620],[31,21]],[[5577,7121],[1,43]],[[7818,7647],[15,-64],[38,-50],[28,-143]],[[7913,7382],[12,-25]],[[7939,7001],[-98,-26],[-33,-32],[-23,-69],[-96,21],[-52,-7],[-13,-65]],[[7624,6823],[-16,72],[-38,85],[-16,74],[-33,38],[-23,65],[0,87],[-63,177],[-84,226],[5,55]],[[7422,7203],[19,-211],[41,-58]],[[7326,6354],[-6,51],[-50,57],[-41,-84],[-42,31],[-39,-63],[-78,10],[-26,64],[-26,-8],[-31,-110]],[[6942,6454],[-26,196],[37,129],[28,0],[0,256]],[[7323,6000],[-18,-33],[-80,4],[-10,-20]],[[5588,6549],[-1,50]],[[5594,6634],[-25,76],[25,75]],[[5768,6182],[-36,32],[-27,112]],[[3154,6622],[-33,-10],[-44,31]],[[7835,6476],[0,-122],[-33,-99]],[[7640,6492],[39,-73],[103,53],[53,4]],[[7835,6476],[80,39],[-16,-163],[-34,-100],[-40,-167],[-39,-105],[-51,-101],[-80,-108],[-74,-172]],[[4200,6086],[11,35],[78,-2],[17,-42]],[[6932,9038],[-15,-46]],[[6625,8794],[4,7]],[[6987,10172],[-50,-3],[-37,-41],[-12,-15],[-5,-18],[-27,-70],[-84,-57],[-21,-143],[60,-62],[-87,-128],[-15,-111],[-102,-42],[-5,56],[-57,133],[6,38]],[[7259,3896],[-5,60]],[[7392,8061],[-3,85]],[[7389,8146],[26,63],[87,-12],[51,29],[57,2]],[[6656,6593],[-4,7],[-1,0],[-1,0]],[[6215,6135],[-15,-8]],[[9682,6502],[-43,73],[-53,21],[-33,-181],[39,-137],[4,-77],[57,-63]],[[9586,6151],[-50,130],[-16,11],[19,123]],[[8480,8232],[19,70],[0,89],[73,100],[16,-52]],[[8005,8243],[-7,148],[-21,85],[53,3],[-25,84],[-50,-21]],[[8075,8512],[39,41]],[[8114,8553],[19,16]],[[8133,8569],[16,33],[66,-32],[1,-52],[63,-20],[21,-79],[54,-67],[84,-63],[-2,-45]],[[10404,5082],[15,10]],[[10435,5108],[5,-36]],[[6454,8216],[37,27],[29,-40],[18,-117],[-30,-82],[46,-42]],[[7119,8557],[-45,-99],[-22,15]],[[7389,8146],[-42,62],[-64,-55],[-50,53],[-53,-44],[-84,60],[-21,229],[79,-4],[6,59],[55,-10],[85,64],[47,-7],[96,-60],[90,-8],[48,40]],[[10323,7422],[7,-49],[-16,-94],[-43,36],[30,93],[22,14]],[[7247,5646],[2,0],[1,0],[7,-93],[41,18],[28,72]],[[7501,5397],[-13,-85],[23,-62],[-6,-97],[17,-103],[22,-45]],[[7357,4930],[-2,11],[0,2],[-7,8],[0,2],[-14,104],[-4,7],[-4,5],[0,1],[-6,-14]],[[7287,5077],[-61,55]],[[7226,5132],[-54,250],[3,31]],[[7203,5641],[44,5]],[[7324,5731],[-38,-4],[-39,-81]],[[7175,5681],[1,26]],[[7203,5798],[27,63]],[[7468,8904],[-117,-64],[23,-59],[-46,-58],[-25,95],[-81,53],[-47,-94]],[[4341,3502],[-12,-61]],[[4333,3429],[-54,-83],[-40,2],[-77,66],[6,102]],[[3094,8965],[-65,-60],[35,-36],[52,29],[54,-33],[99,-5]],[[3281,8853],[-98,-33],[-31,-176],[13,-106],[45,68],[-11,93],[60,118],[51,-46],[1,-78],[28,-66]],[[3332,8597],[5,-79],[101,65],[16,50]],[[3455,8644],[70,0],[41,83]],[[3839,8813],[13,-10]],[[3862,8773],[-62,-50],[-56,-77],[-2,-107],[-76,-29],[-46,-44],[2,-63],[-73,-85],[19,-175],[-21,-62],[-86,-84],[-69,-110],[-22,-86],[52,-286],[-14,-94],[-65,112],[-11,138],[-47,83],[-25,-23],[-60,43],[-80,1],[-29,-61],[-37,-29],[-38,50],[-103,-34],[-79,-101],[-12,-70],[13,-57]],[[2766,7514],[-10,33]],[[2702,7709],[-9,12]],[[2151,7917],[-47,100],[-72,38],[-41,113],[-22,108],[-43,73],[-22,90],[11,79],[-19,98],[16,77],[6,187],[-27,96],[87,-12],[-19,68]],[[1709,9500],[-84,47],[-79,122],[-79,-1],[-39,46],[-118,61],[-75,3],[-137,56],[-19,-60],[-165,-75],[-183,-194],[-66,-33],[-42,28],[97,64],[44,49],[-91,101],[-48,-34],[-26,98],[-48,-15],[-51,49],[-12,107],[38,71],[53,-5],[78,47],[-63,51],[-122,5],[-6,21],[-14,12],[9,11],[-53,23],[215,100],[-163,88],[11,20],[0,17],[19,-3],[88,37],[38,61],[176,68],[144,-50],[398,-62]],[[8195,8771],[21,-20]],[[8133,8569],[-19,-16]],[[8165,8798],[5,-5]],[[3719,6516],[-8,-70],[82,48],[35,-69],[64,10],[41,-40],[76,23],[71,-69],[25,-55]],[[9856,7169],[-51,-63],[-30,-103],[39,-115],[73,-135],[18,-168],[-6,-76],[-91,-142],[-61,-48],[-12,101]],[[7977,6841],[-30,-69],[-106,-73],[-82,-76],[-64,-44],[-47,-6],[-26,195],[2,55]],[[7286,3896],[-18,-115],[-37,-58],[-30,-98],[-101,-167],[-89,-58],[-79,12],[-89,-56],[-51,47],[-19,96],[7,76],[-56,204]],[[7165,4211],[66,-15]],[[7201,4655],[-35,-5],[-22,-55]],[[7144,4595],[-41,-39],[-18,-58]],[[7085,4498],[-61,11]],[[7137,5079],[12,60]],[[7207,5157],[19,-25]],[[7085,4498],[59,97]]]};
 sap.zen.Dispatcher.instance.pauseDispatching();
 var sdkReqs = require.config({
	 context : "sdk",
	 paths: {
		d3:  pathInfo.mainSDKPath + "org.scn.community.geovis/os/d3/d3.min",
		topojson : pathInfo.mainSDKPath + "org.scn.community.geovis/os/d3/topojson"
	},
	shim : {
		d3 : {
			// exports : "d3"
		},
		topojson : {
			deps : ["d3"],
			exports : "topojson"
		}
	}
 });
 sdkReqs(["require","d3"], function(require, d3) {require(["topojson"],function(topojson){
		 /**
		  * Choropleth Map
		  */
		 sap.designstudio.sdk.Component.subclass("org.scn.community.geovis.Choropleth",function() {
			 var that = this;
			 // Map Cache
			 this.mapCache = {};
			 // Design Studio Autoproperties
			 this.props = {
				selectedFeature : { value : ""},
				centerFeature : { value : ""},
				featureProperty : { value : "NAME_1"},
				labelProperty : { value : "NAME_1"},
				measureMember :  { value : "" },
				ms :  { value : 750 },
				floor :  { value : 0 },
				defaultFillColor : { value : "#E5EADE" },
				backgroundColor : { value : "transparent" },
				projection : { value : "mercator" },
				tooltipOn :  { value : true },
				legendOn :  { value : true },
				globeOn :  { value : true },
				graticuleOn :  { value : true },
				makeRoomX :  { value : true },
				legendWidth :  { value : 0 },
				legendX : { value : 0},
				legendY : { value : 0},
				legendScale : { value : 1},
				gradientLeft : { value : 30 },
				gradientRight : { value : 30 },
				gradientBottom :  { value : 15 },
				gradientHeight :  { value : 10 },
				labelSize :  { value : "10px" },
				legendTitle :  { value : "" },
				colorPalette :  { value : "#F0F9E8,#CCEBC5,#A8DDB5,#7BCCC4,#43A2CA,#0868AC" },
				colorScale : { value : "quantile" },
				mapData : { value : "" },
				mapLeft : { value : 0 },
				mapTop : { value : 0 },
				mapRight : { value : 0 },
				mapBottom : { value : 0 },
				center : { value : "0,0" },
				scale : { value : 150 },
				yaw : { value : 0.0 },
				pitch : { value : 0.0 },
				roll : { value : 0.0 }
				
			};
			/*
			 * Create the aforementioned getter/setter and attach to 'this'.
			 */
			for(var property in this.props){
				this[property] = function(property){
					return function(value){
						if(value===undefined){
							return this.props[property].value;
						}else{
							this.props[property].value = value;
							this.props[property].changed = true;
							if(this.props[property].onChange) {
								this.props[property].onChange.call(this,"Property Change");
							}
							return this;
						}
					};
				}(property);
			}
			/**
			 * @param value Design Studio ResultSet JSON Structure
			 * @return If value is undefined, returns data, else returns reference to itself.
			 */
			this.data = function(value) {
				if (value === undefined) {
					return this._data;
				} else {
					this._data = value;
					return this;
				}
			};
			/**
			 * Convert any TopoJSON data into GeoJSON
			 */
			this.processMapData = function(mapData) {
			    //var o = smd.options.topojsonObject;
			    var obj;
			    var returnObject = mapData;		// Assume GeoJSON
			    if (mapData.type.toLowerCase() === 'topology' && typeof topojson != 'undefined') {
			    	// Use first object found if object not defined
			    	//if (typeof o == 'undefined') {
			        for (var o in mapData.objects) {
			          if (mapData.objects.hasOwnProperty(o)) {
			            obj = mapData.objects[o];
			            break;
			          }
			        }
			      //}
			      returnObject = topojson.feature(mapData, obj);
			    }
			    return returnObject;
			};
			this.setSelectedFeature = function(o){
				if(o.properties && o.properties[this.featureProperty()]) {
					this.selectedFeature(o.properties[this.featureProperty()]);
					this.firePropertiesChanged(["selectedFeature"]);
					this.fireEvent("onSelect");
				}				
			};
			/*
			 * This adds flattened Design Studio Data to the GeoJSON under a property called 'designStudioMeasures'
			 */
			this.applyMeasures = function(mapData,flatData){
				try{
					if(mapData && mapData.features && mapData.features.length > 0){
						var propertyName = this.featureProperty();
						for(var featureIndex = 0;featureIndex<mapData.features.length;featureIndex++){
							var feature = mapData.features[featureIndex];
							var match = false;
							if(feature.properties && feature.properties[propertyName]){
								var currentPropertyValue = feature.properties[propertyName];
								if(flatData && flatData.hash && flatData.hash[currentPropertyValue] != undefined){
									var rowIndex = flatData.hash[currentPropertyValue];
									var measures = {};
									for (var i=0;i<flatData.columnHeaders.length;i++){
										measures[flatData.columnHeaders[i]] = flatData.values[rowIndex][i];
									}
									//alert("Match found on " + rowIndex + currentPropertyValue + "\n\nAttaching " + JSON.stringify(measures));
									feature.properties.designStudioMeasures = measures;
								}else{
									feature.properties.designStudioMeasures = {};
									
								}
							}
						}
					}
				}catch(e){
					throw("A problem was encountered while applying data to map:\n\n" + e);
				}
			};
			/**
			 * Update Features
			 */
			this.updateFeaturePaths = function(){
				// Data
				var features = this.pathGroup.selectAll('path').data(this._mapJSON.features);
				var labels = this.labelGroup.selectAll('text').data(this._mapJSON.features);
				// Enter
				var newFeatures = features.enter().append("path")
					.attr("class","path");
				
				var newLabels = labels.enter().append("text")
					.attr('class', function(d) { return "subunit-label " + d.id; })
					.attr("transform", function(d) { return "translate(" + that.projPath.centroid(d) + ")"; })
					.attr("dy", ".35em")
					.style("font-size", that.labelSize())
					.text(function(d) { return d.properties[that.labelProperty()]; });

				// Update graticule
	    		this.graticulePath
	    			.transition().duration(this.ms())
	    			.attr('opacity', function(){ if(that.graticuleOn()){
	    				return 1;
	    			}else{
	    				return 0;
	    			}})
            		.attr('d', this.projPath);
	    		// Update globe
	    		this.globePath
	    			.transition().duration(this.ms())
	    			.attr('opacity', function(){ if(that.globeOn()){
	    				return 1;
	    			}else{
	    				return 0;
	    			}})
        			.attr('d', this.projPath);
				// Update features
				this.pathGroup.selectAll("path")
					.transition().duration(this.ms())
					.attr("d",this.projPath)
					.attr("fill", function(d) {
						if(d.properties && d.properties.designStudioMeasures){
							var mm = that.measureMember();
							if(!mm){
								if(that._flatData && that._flatData.columnHeaders && that._flatData.columnHeaders.length > 1) mm = that._flatData.columnHeaders[0];
							}
							return that.colorRange(d.properties.designStudioMeasures[mm]) || that.defaultFillColor();	
						}else{
							return that.defaultFillColor();
						}
					});
				this.labelGroup.selectAll("text")
					.style("font-size", that.labelSize())	
					.transition().duration(this.ms())
					.attr('class', function(d) { return "subunit-label " + d.id; })
					.attr("transform", function(d) { return "translate(" + that.projPath.centroid(d) + ")"; })
					.text(function(d) { return d.properties[that.labelProperty()]; });
				// Events
				this.pathGroup.selectAll('path')
					.on('mouseover', this.doTooltip)
					.on('mouseout', function(d) {
						that.triangle
							.transition().duration(that.ms())
							.attr("opacity",0);
						that.container.select('.tooltip').style('display', 'none');
					})
					.on('click', function(d){ 
						that.setSelectedFeature(d);
					});
				this.labelGroup.selectAll("text")
					.on('mouseover', this.doTooltip);
				// Exit
				 features.exit().remove();
				 labels.exit().remove();
				return this;
			}
			/**
			 * Update Cosmetics
			 */
			this.updateCosmetics = function(){
				this.canvas
		    		.transition().duration(this.ms())
		    		.attr('width', this.dimensions.width)
		    		.attr('height', this.dimensions.height)
		    		.attr('class', 'canvas');
	    	
		    	this.canvas
		    		.classed('tooltipped', this.tooltipOn())
		    		.data([{ x: 0, y: 0 }]);

		    	this.background
		    		.transition().duration(this.ms())
		    		.style("fill",this.backgroundColor())
		    		.attr('width', this.dimensions.width)
		    		.attr('height', this.dimensions.height);
		    	
		    	/*
		    	this.gradientRect
		    		.transition().duration(this.ms())
		    		.attr("x",this.dimensions.gradientLeft)
		    		.attr("y", this.dimensions.height - this.dimensions.gradientBottom - this.dimensions.gradientHeight)
		    		.attr('width', this.dimensions.width - this.dimensions.gradientLeft - this.dimensions.gradientRight)
		    		.attr('height', this.dimensions.gradientHeight);
		    	*/
		    	var legend2Transform = this.dimensions.gradientLeft + "," + (this.dimensions.height - this.dimensions.gradientBottom - this.dimensions.gradientHeight);
		    	this.legend2
		    		.transition().duration(this.ms())
		    		.attr("transform", "translate(" + legend2Transform +")");
		    	
		    	this.triangle
		    		.transition().duration(this.ms())
		    		.attr("d","M-"+this.gradientHeight()/2+" 0 L"+this.gradientHeight()/2+" 0 L 0 "+this.gradientHeight()/2+" Z")
		    		.attr("transform", "translate(0,"+(0-this.dimensions.gradientHeight)+")");
		    	
		    	var trans = "0," + (0 - this.dimensions.gradientHeight);
		    	this.gradientTicks
		    		.transition().duration(this.ms())
		    		.attr("transform", "translate(" + trans +")");
		    	
		    	this.legendGroup//.data([{ x: this.dimensions.legendLeft - 1, y: this.dimensions.legendY - 1 }])
	    			.transition().duration(this.ms())
    				.attr("transform", "translate("+this.dimensions.legendLeft+","+this.dimensions.legendTop+") "+
    					  "scale(" + this.legendScale() + ")")
    				.attr("opacity", function(){
    					if(that.legendOn()){
    						return 1;
    					}else{
    						return 0;
    					}
    				});
    				
		    	this.featureGroup
		    		.transition().duration(this.ms())
	    			.attr("transform", "translate("+this.dimensions.mapLeft+","+this.dimensions.mapTop+")")
		    		.attr('width', this.dimensions.mapWidth)
	    			.attr('height', this.dimensions.mapHeight);
		    	
		    	return this;
			}
			/**
			 * Update Color Range
			 */
			this.updateColorRange = function(){
		        var d, domain;
		        this.valuesSet = [this.floor()];
	        	// Get values for range
		        for (d = 0; d < this._mapJSON.features.length; d++) {
	        		if(this._mapJSON.features[d].properties.designStudioMeasures){
	        			var mm = that.measureMember();
						if(!mm){
							if(that._flatData && that._flatData.columnHeaders && that._flatData.columnHeaders.length > 1) mm = that._flatData.columnHeaders[0];
						}
	        			this.valuesSet.push(parseFloat(this._mapJSON.features[d].properties.designStudioMeasures[mm]));	
	        		}else{
	        			this.valuesSet.push(null);
	        		}
		        }
		        this.valuesSet.sort(function(a, b) { return a - b; });
		        // Make range with appropriate values
		        var cp = [];
		        if(this.colorPalette()!="") cp = this.colorPalette().split(",");
		        this.colorRange = d3.scale[this.colorScale()]()
		        	.domain(this.valuesSet)
		        	.range(cp);
		        // Clamp if can
		        if (typeof this.colorRange.clamp == 'function') {
		        	this.colorRange.clamp(true);
		        }
		        
		        	
		        return this;
			};
			/**
			 * Update Legend
			 */
			this.updateLegend = function(){
				// LEGEND
			    var unit = 10;								// Swatch Size
			    var min = d3.min(this.valuesSet);
			    var max = d3.max(this.valuesSet);
			    var legendSwatches = [];
			    var gradientStops = [];
			    var c = this.colorPalette();
			    if(c!="") gradientStops = c.split(","); 
			    var extents = [];
			    if (this.colorScale() == 'quantile') {
			    	legendSwatches = this.colorRange.quantiles();
			    }
				if (this.colorScale() === 'quantize') {
					for (var i=0; i < gradientStops.length; i++) {
						legendSwatches.push(this.colorRange.invertExtent(gradientStops[i])[0]);
					}
				}
				for(var i=0;i<gradientStops.length;i++){
		    		// Push min in 1st position?
		    		extents.push({
		    			min : this.colorRange.invertExtent(gradientStops[i])[0],	// Returns array of [min,max] per quantile "bucket"
		    			max : this.colorRange.invertExtent(gradientStops[i])[1],
		    		});
		    	}

				/**
				 * https://github.com/mbostock/d3/wiki/Quantitative-Scales
				 * legendSwatches - [100,150,1500,2000] // Comes from colorRange.quantiles
				 * gradientStop   - [#009966,#000000]
				 * invertExtent(index) - [min,max] of quantile bucket
				 * 
				 */
				
				//Ensure we have something to make a legend with
				if (legendSwatches && legendSwatches.length > 0) {
			        var scale = d3.scale.linear()
			        	.range([0,1])
			        	.domain([min,max]);
			        
			        this.tickScale = d3.scale.linear()
		        		.range([0,this.dimensions.gradientWidth])
		        		.domain([min,max]);
			        		        
			        var tickValueScale = d3.scale.ordinal()
	        			.rangePoints([0,this.dimensions.gradientWidth])
	        			.domain(legendSwatches);
			        
			        var rects = this.legendGroup.selectAll('rect.legend-swatch').data(extents);
			        var rects2 = this.gradientRects.selectAll("rect").data(extents);
			        var ticks = this.gradientTicks.selectAll("line").data(extents);
			        var tickLabels = this.gradientTicks.selectAll("text").data(extents);
					var legendLabels = this.legendGroup.selectAll('text.legend-amount').data(extents);
					
			        rects2.enter().append("rect");
			        /*
			         * Too cluttered
			        ticks.enter().append("line")
			        	.attr("stroke-width", 1)
			        	.attr("stroke", "black");
			        
			        tickLabels.enter().append('text')
						.attr('class', 'tick-label')
						.attr("dy", "0em")
						.attr("y",-5)
						.style("text-anchor", "middle")
						.style("font-size", "8pt")
						.text(function(d) { return that.formatter(d); });
			        */
			        rects2.exit().remove();
			        ticks.exit().remove();
					tickLabels.exit().remove();
					
			        // Make Solid
					/*this.gradientDef.selectAll("stop")
			        	.transition().duration(this.ms())
			        	.attr("offset",function(d){return scale(d) * 100 + "%";})
			        	.attr("stop-color",function(d){return that.colorRange(d);})
			        	.attr("stop-opacity",1);
			        */

					this.gradientRects.selectAll("rect")
						.transition().duration(this.ms())
			        	.attr("x",function(d){return that.tickScale(d.min);})
			        	.attr("width",function(d){return that.tickScale(d.max) - that.tickScale(d.min);})
			        	.attr("y",0)
			        	.attr("height",this.dimensions.gradientHeight)
			        	.attr("fill",function(d){return that.colorRange(d.min);});
			        
			        this.gradientTicks.selectAll("line")
			        	.transition().duration(this.ms())
			        	.attr("x1",function(d){return that.tickScale(d.min);})
			        	.attr("x2",function(d){return that.tickScale(d.min);})
			        	.attr("y1",0).attr("y2",this.dimensions.gradientHeight)
					
			        this.gradientTicks.selectAll("text")
						.transition().duration(this.ms())
						.attr("x",function(d){return that.tickScale(d.min);})
						.text(function(d) { return that.formatter(d.min); });
					
					/**
					 * LEGEND
					 */
					this.legendRect
			    		.transition().duration(this.ms())
    					.attr('width', this.dimensions.legendWidth)
    					.attr('height', extents.length * (unit * 2) + (unit * 3));
			    	this.legendLabel
			    		.transition().duration(this.ms())	
			    		.attr('font-size', unit)
				        .attr('x', (unit * 1))
				        .attr('y', (unit * 2))
				        .text(function(){
				        	var mm = that.measureMember();
							if(!mm){
								if(that._flatData && that._flatData.columnHeaders && that._flatData.columnHeaders.length > 1) mm = that._flatData.columnHeaders[0];
							}
				        	if(that.legendTitle()=="") {
				        		return mm || "No Measure Found";
				        	}else{
				        		return that.legendTitle();
				        	}
				        });
					// Add colors swatches
					
					
					// Enter Color Swatches
					rects.enter().append('rect')
						.attr('class', 'legend-swatch');
						
					// Exit Color Swatches
					rects.exit().remove();

					// Update Color Swatches
					this.legendGroup.selectAll('rect.legend-swatch')
						.transition().duration(this.ms())  
						.attr('width', unit)
						.attr('height', unit)
						.attr('x', (unit * 1))
						.attr('y', function(d, i) { return (i * unit * 2) + (unit * 3); })
						.style('fill', function(d, i) { return that.colorRange(d.min); });
					
					// Enter swatch labels
					legendLabels.enter().append('text').attr('class', 'legend-amount');
					// Exit swatch labels
					legendLabels.exit().remove();
					// Update - why doesn't text update here, or does it?
					
					this.legendGroup.selectAll('text.legend-amount')
						.transition().duration(this.ms())
					    .attr('font-size', unit)
					    .attr('x', (unit * 3))
					    .attr('y', function(d, i) { return (i * unit * 2) + (unit * 4 - 1); })
					    .text(function(d, i) { return '>= ' + that.formatter(d.min); });		
				    }
				return this;
			}
			/**
			 * Update Projection
			 */
			this.updateProjection = function(){
				// Determine Center of Map
		    	// this.centroid = d3.geo.centroid(this._mapJSON);
		    	var centerFeature = null;
		    	for(var i=0;i<this._mapJSON.features.length;i++){
		    		var f = this._mapJSON.features[i];
		    		if(f.properties && f.properties[this.featureProperty()] && f.properties[this.featureProperty()]==this.centerFeature()){
		    			centerFeature = f;
		    		}
		    	}
		    	this.centroid = d3.geo.centroid(centerFeature);
		    	// Create projection
		    	this.proj = d3.geo[this.projection()]()
	    			.scale(1)
	    			.translate([0,0]);
	    		// Create path
		    	this.projPath = d3.geo.path()
	    			.projection(this.proj);
            	
	    		// Compute the bounds of a feature of interest, then derive scale & translate.
		    	var b = this.projPath.bounds(this._mapJSON),
		    	    s = .95 / Math.max((b[1][0] - b[0][0]) / this.dimensions.mapWidth, (b[1][1] - b[0][1]) / this.dimensions.mapHeight),
		    	    t = [(this.dimensions.mapWidth - s * (b[1][0] + b[0][0])) / 2, (this.dimensions.mapHeight - s * (b[1][1] + b[0][1])) / 2];
		    	
		    	this.proj.scale(s).translate(t);
		    	
		    	// Center if projection supports
		    	if(typeof this.proj.center === "function"){
		    		if(centerFeature) this.proj.center(this.centroid);
		    	}
		    	// Rotate if projection supports
		    	if (typeof this.proj.rotate === "function") {
		    	    this.proj.rotate([this.yaw(),this.pitch(),this.roll()]);
		    	}
		    	if(this.projection()=="orthographic") this.proj.clipAngle(90);
		    	return this;
			}
			/**
			 * Build Map Framework
			 */
			this.buildMap = function(){
				this.canvas = this.container.append('svg');
				this.defs = this.canvas.insert("defs");
				this.gradientDef = this.defs.append("linearGradient")
					.attr("id","myGradient")
					.attr("x1", "0%")
					.attr("y1", "0%")
					.attr("x2", "100%")
					.attr("y2", "0%")
					.attr("spreadMethod", "pad");
	    		this.background = this.canvas.append('rect')
	    			.classed('background', true);
	    		
	    		/* pretty, but useless.
	    		 * this.gradientRect = this.canvas.append("rect")
	    			.attr("height",10)
	    			.style("fill","url(#myGradient)");
	    		*/
	    		
	    		var legend2Transform = this.dimensions.gradientLeft + "," + (this.dimensions.height - this.dimensions.gradientBottom - this.dimensions.gradientHeight);
	    		var tickTransform = "0," + (0 - this.dimensions.gradientHeight);
	    		
	    		
	    		
	    		
	    		this.featureGroup = this.canvas.append('g')
	    			.attr('class', 'feature-group');
	    		this.globePath = this.featureGroup.append('path')
	    			.datum({ type: 'Sphere' })
	    			.attr('class', 'globe');
	    		this.graticule = d3.geo.graticule();
		        this.graticulePath = this.featureGroup.append('path')
	            	.datum(this.graticule)
	            	.attr('class', 'graticule');
	    		this.pathGroup = this.featureGroup.append('g')
    				.attr('class', 'path-group');
	    		this.labelGroup = this.featureGroup.append('g')
    				.attr('class', 'label-group');
		        
	    		this.tooltipDiv = this.container.append('div')
	    			.attr("class","tooltip-container")
	    			.classed('tooltip', true);
	    		this.legendGroup = this.canvas.append('g')
		        	.attr('class', 'legend-group');
	    		this.legendRect = this.legendGroup.append('rect')
			        .attr('class', 'legend-container')
			        .attr('x', 0)
			        .attr('y', 0);
			    this.legendLabel = this.legendGroup.append('text')
			        .attr('class', 'legend-label');

			    // Horizontal Scale
			    this.legend2 = this.canvas.append("g")
    				.attr("transform", "translate(" + legend2Transform +")");	    		
    	 		this.gradientRects = this.legend2.append("g")
					.attr("class", "gradient-rects");
	    		this.triangle = this.legend2.append("path")
	    			.attr("opacity",0)
					.attr("d","M-"+this.gradientHeight()/2+" 0 L"+this.gradientHeight()/2+" 0 L 0 "+this.gradientHeight()/2+" Z");
	    		this.gradientTicks = this.legend2.append("g")
	    			.attr("class", "gradient-ticks")
	    			.attr("transform", "translate(" + tickTransform +")");
			    
			    return this;
			}
			this.afterUpdate = function(){
				// Flatten Data
				this._flatData = null;
				var that = this;
				// var mapData = this.loadMap(this.map());
				var vals = [];
				try{
					this._flatData = org_scn_community_databound.flatten(this.data(),{});
					if(this._flatData && this._flatData.formattedValues && this._flatData.formattedValues.length > 0) {
						vals = this._flatData.formattedValues.slice();
					}else if(this._flatData && this._flatData.values && this._flatData.values.length > 0){
						vals = this._flatData.values.slice();
					}else{
						// Something happened.
						throw("No formatted or unformatted values found.");
					}
				}catch(e){
					var errorMessage = e;
				}
				this.formatter = d3.format(',.2f');			// Make a DS property
				this.applyMeasures(this._mapJSON,this._flatData);
				this.dimensions = {
					width : this.$().width(),
					height : this.$().height(),
					gradientLeft : this.gradientLeft(),
					gradientRight : this.gradientRight(),
					gradientHeight : this.gradientHeight(),
					gradientBottom : this.gradientBottom(),
					mapLeft : this.mapLeft(),
					mapRight : this.mapRight(),
					mapTop : this.mapTop(),
					mapBottom : this.mapBottom(),
					legendWidth : this.legendWidth() || (this.$().width() / 5),
					legendTop : this.legendY(),
					legendLeft : this.legendX()
				};
				if(this.legendOn()){
					if (this.makeRoomX()) this.dimensions.mapLeft += (this.dimensions.legendWidth + this.legendX());
				}
				this.dimensions.gradientWidth = this.dimensions.width - this.dimensions.gradientLeft - this.dimensions.gradientRight;
				this.dimensions.mapWidth = this.dimensions.width - this.dimensions.mapLeft - this.dimensions.mapRight;
				this.dimensions.mapHeight = this.dimensions.height - this.dimensions.mapTop - this.dimensions.mapBottom;
		    	
				this.container = d3.select("#"+this.$().attr("id"));
		    	// Render Canvas
		    	this.canvas = this.container.select("svg");
		    	if(this.canvas.empty()) this.buildMap();
		    	this.updateProjection()
		    		.updateCosmetics()
		    		.updateColorRange()
		    		.updateLegend()
		    		.updateFeaturePaths();

		        
			    this._poller = window.setTimeout(function(){that.measureSize(that)},that._pollInterval);
			};
			this.projectionTween = function(projection0, projection1) {
				return function(d) {
				    var t = 0;

				    var projection = d3.geo.projection(project)
				        .scale(1)
				        .translate([width / 2, height / 2]);

				    var path = d3.geo.path()
				        .projection(projection);

				    var b = path.bounds(this._mapJSON),
		    	    	s = .95 / Math.max((b[1][0] - b[0][0]) / mapWidth, (b[1][1] - b[0][1]) / mapHeight),
		    	    	t = [(mapWidth - s * (b[1][0] + b[0][0])) / 2, (mapHeight - s * (b[1][1] + b[0][1])) / 2];
				    projection.scale(s).translate(t);
				    
				    function project(λ, φ) {
				      λ *= 180 / Math.PI, φ *= 180 / Math.PI;
				      var p0 = projection0([λ, φ]), p1 = projection1([λ, φ]);
				      return [(1 - t) * p0[0] + t * p1[0], (1 - t) * -p0[1] + t * -p1[1]];
				    }

				    return function(_) {
				      t = _;
				      return path(d);
				    };
				  };
				}

			this.measureSize = function(that){
				var currentWidth = that.$().innerWidth();
				var currentHeight = that.$().innerHeight();
				if(currentWidth != that._previousWidth || currentHeight != that._previousHeight){
					// If width or height has changed since the last calculation, redraw.
					/* Debug alert:
					alert("Resize detected.\n\nOld:" + that._previousWidth + " x " + that._previousHeight + 
							"\n\nNew:" + currentWidth + " x " + currentHeight);
					*/
					that._previousHeight = currentHeight;
					that._previousWidth = currentWidth;	
					this.afterUpdate();
				}else{
					// Sizes are the same.  Don't redraw, but poll again after an interval.
					that._poller = window.setTimeout(function(){that.measureSize(that)},that._pollInterval);	
				}
			};
			this.doTooltip = function(d) {
				var mm = that.measureMember();
				if(!mm){
					if(that._flatData && that._flatData.columnHeaders && that._flatData.columnHeaders.length > 1) mm = that._flatData.columnHeaders[0];
				}
				var val = null;
				if(d.properties && d.properties.designStudioMeasures && d.properties.designStudioMeasures[mm]){
					val = d.properties.designStudioMeasures[mm];
					that.triangle
						.transition().duration(that.ms())
						.attr("d","M-"+that.gradientHeight()/2+" 0 L"+that.gradientHeight()/2+" 0 L 0 "+that.gradientHeight()/2+" Z")
						.attr("opacity",1)
						.attr("transform", "translate("+that.tickScale(val)+","+(0-that.dimensions.gradientHeight)+")");
				}
				
				// Tooltip
				if (that.tooltipOn()) {
					var tt = "";
					if(d.properties && d.properties[that.labelProperty()]){
						tt+="<b>" + d.properties[that.labelProperty()] + "</b>";
					}
					if(d.properties && d.properties.designStudioMeasures){
						tt +="<br/><ul>"
						var dsm = d.properties.designStudioMeasures;
						for(var measure in dsm){
							tt+="<li><b>" + measure + "</b>: " + that.formatter(dsm[measure]) + "</li>";
						}
						tt +="</ul>";
					}
					if(d.properties && d.properties[that.featureProperty()]){
						
					}
					that.container.select('.tooltip')
						.style('display', 'block')
						.html(tt);
				}

				// Styles
				// d3.select(this).style(smd.options.stylesHover);
			}
			
			this.mapDataChanged = function(reason){				
				var j = worldData;	// Default to World Map
				try{
					if(this.mapData()!=""){
						j = jQuery.parseJSON(this.mapData());
					}
					this._mapJSON = this.processMapData(j);
				}catch(e){
					alert(this.mapData());
					throw "Error with Map Data.\n\n" + e;
				}
			}
			this.loadMap = function(mapFile){
				var mapURL = pathInfo.myScriptPath + 'maps/' + mapFile + ".json";
				if(mapFile=="Use External URL") {
					mapFile = this.externalMap();
					mapURL = this.externalMap();
				}
				if(mapFile=="Use Map Data") {
					try{
						var j = worldData;
						if(this.mapData()!=""){
							j = jQuery.parseJSON(this.mapData());
						}
						return this.processMapData(j);
					}catch(e){
						throw "Error with Map Data.\n\n" + e;
					}
				}
				if(this.mapCache[mapURL]) return this.mapCache[mapURL].features;
				this.mapCache[mapURL] = {
					fileName : mapFile,
					features : {}
				}
				try{
					var featureJSON = $.ajax({
						async : false,
						type : "GET",
						url : mapURL
					}).responseText;
					this.mapCache[mapURL].mapData = jQuery.parseJSON(featureJSON);
					this.mapCache[mapURL].features = this.processMapData(this.mapCache[mapURL].mapData);
					//alert(JSON.stringify(this.mapCache[mapURL].features));
				}catch(e){
					throw("Error loading map:\n\nFile:" + mapURL + "\n\n" + e);
				}
				return this.mapCache[mapURL].features;
			}
			this.init = function() {
				try{
					this.$().css("overflow","hidden");
					this.$().addClass("DesignStudioSCN");
					this.$().addClass("Choropleth");
					this.props.mapData.onChange = this.mapDataChanged;
					this.props.mapData.onChange.call(this,"init");
				}catch(e){
					this.$().html("Error in init:\n\n" + e);
				}
			};
		 });
		 // End of SDK
		 sap.zen.Dispatcher.instance.resumeDispatching();
 		});//End of topojson callback
 	});
 // End of Require d3+topo Callback
})();
 // End of closure