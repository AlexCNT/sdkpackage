/* GENERATED - DO NOT EDIT */
/**
 * Copyright 2014, Contributors
 * 
 * Original Source Code Location:
 *  https://github.com/org-scn-design-studio-community/sdkpackage/
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License. 
 * You may obtain a copy of the License at 
 *  
 *  http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License. 
 */


/**
	Array Holder for Component, Name and Type
 */
class org.scn.community.shared.ComponentHolder {
	  Component component;
	  String name;
	  String type;
}

/**
	Array for Components
	<br>
	var panels = COMPONENTHOLDER.getPanels();<br>
	<br>
	// a loop for all entries<br>
	// content is of type Component<br>
	panels.forEach(function(element, index) {<br>
	
		// panel is of type Component<br>
		var componentWidth = element.getWidth();<br>
	});
 */
class org.scn.community.shared.ComponentArray extends Array {
	org.scn.community.shared.ComponentArray (org.scn.community.shared.ComponentHolder h);
}


/**
	Array Holder for DataSourceAlias, Name and Type
 */
class org.scn.community.shared.DataSourceHolder {
	  DataSourceAlias datasource;
	  String name;
	  String type;
}

/**
	Array for DataSourceAlias
	<br>
	var panels = COMPONENTHOLDER.getPanels();<br>
	<br>
	// a loop for all entries<br>
	// content is of type DataSourceAlias<br>
	panels.forEach(function(element, index) {<br>
	
		// panel is of type DataSourceAlias<br>
		var componentWidth = element.getWidth();<br>
	});
 */
class org.scn.community.shared.DataSourceArray extends Array {
	org.scn.community.shared.DataSourceArray (org.scn.community.shared.DataSourceHolder h);
}

/**
 * enum filed definition
 */
class org_scn_community_shared_BrowserEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_Browser extends Enum {

	/** DEFAULT */
	org_scn_community_shared_BrowserEnumfield CHROME;
       
	/** EMPH */
	org_scn_community_shared_BrowserEnumfield SAFARI;

	/** ACCEPT */
	org_scn_community_shared_BrowserEnumfield MOZILLA;

	/** REJECT */
	org_scn_community_shared_BrowserEnumfield IE;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_ButtonStyleEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_ButtonStyle extends Enum {

	/** DEFAULT */
	org_scn_community_shared_ButtonStyleEnumfield Default;
       
	/** EMPH */
	org_scn_community_shared_ButtonStyleEnumfield Emph;

	/** ACCEPT */
	org_scn_community_shared_ButtonStyleEnumfield Accept;

	/** REJECT */
	org_scn_community_shared_ButtonStyleEnumfield Reject;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_ButtonTypeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_ButtonType extends Enum {

	/** Default */
	org_scn_community_shared_ButtonTypeEnumfield Default;
       
	/** Transparent */
	org_scn_community_shared_ButtonTypeEnumfield Transparent;

	/** Accept */
	org_scn_community_shared_ButtonTypeEnumfield Accept;

	/** Reject */
	org_scn_community_shared_ButtonTypeEnumfield Reject;
	
	/** Back */
	org_scn_community_shared_ButtonTypeEnumfield Back;
	
	/** Emphasized */
	org_scn_community_shared_ButtonTypeEnumfield Emphasized;
	
	/** Up */
	org_scn_community_shared_ButtonTypeEnumfield Up;
}
/**
 * enum filed definition
 */
class org_scn_community_shared_ContentNotationEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify field 
 */
class org_scn_community_shared_ContentNotation extends Enum {

	/** PARENT_CHILD_TEXT_URL, for components which are supporting this notation */
	org_scn_community_shared_ContentNotationEnumfield PARENT_CHILD_TEXT_URL;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_DateViewTypeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_DateViewType extends Enum {

	/** Day */
	org_scn_community_shared_DateViewTypeEnumfield Day;
       
	/** Week */
	org_scn_community_shared_DateViewTypeEnumfield Week;

	/** Month */
	org_scn_community_shared_DateViewTypeEnumfield Month;

	/** Year */
	org_scn_community_shared_DateViewTypeEnumfield Year;

	/** Custom_Week */
	org_scn_community_shared_DateViewTypeEnumfield Custom_Week;

	/** Custom_Duration */
	org_scn_community_shared_DateViewTypeEnumfield Custom_Duration;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_DimensionSetEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_DimensionSet extends Enum {

	/** ALL_DIMENSIONS */
	org_scn_community_shared_DimensionSetEnumfield All;
       
	/** RESULT_SET_DIMENSIONS */
	org_scn_community_shared_DimensionSetEnumfield Resultset;

	/** CUSTOM_DIMENSIONS */
	org_scn_community_shared_DimensionSetEnumfield Custom;
}
/**
 * enum filed definition
 */
class org_scn_community_shared_DecimalPlacesEnumfield extends Enumfield {
       
}

/**
 * a set of constants definition 
 */
class org_scn_community_shared_DecimalPlaces extends Enum {

	/** 0 */
	org_scn_community_shared_DecimalPlacesEnumfield D0;
       
	/** 1 */
	org_scn_community_shared_DecimalPlacesEnumfield D1;

	/** 2 */
	org_scn_community_shared_DecimalPlacesEnumfield D2;

	/** 3 */
	org_scn_community_shared_DecimalPlacesEnumfield D3;

	/** 4 */
	org_scn_community_shared_DecimalPlacesEnumfield D4;

	/** 5 */
	org_scn_community_shared_DecimalPlacesEnumfield D5;

	/** 6 */
	org_scn_community_shared_DecimalPlacesEnumfield D6;

	/** 7 */
	org_scn_community_shared_DecimalPlacesEnumfield D7;

	/** 8 */
	org_scn_community_shared_DecimalPlacesEnumfield D8;

	/** 9 */
	org_scn_community_shared_DecimalPlacesEnumfield D9;

}

/**
 * enum filed definition
 */
class org_scn_community_shared_FormatStyleEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_FormatStyle extends Enum {

	/** Short */
	org_scn_community_shared_FormatStyleEnumfield Short;
       
	/** Medium */
	org_scn_community_shared_FormatStyleEnumfield Medium;

	/** Long */
	org_scn_community_shared_FormatStyleEnumfield Long;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_FormattingOperatorEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_FormattingOperator extends Enum {

	/** Use_First */
	org_scn_community_shared_FormattingOperatorEnumfield Use_First;
       
	/** Use_Last */
	org_scn_community_shared_FormattingOperatorEnumfield Use_Last;

	/** Collect */
	org_scn_community_shared_FormattingOperatorEnumfield Collect;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_HorizontalAlignEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_HorizontalAlign extends Enum {

	/** Left */
	org_scn_community_shared_HorizontalAlignEnumfield Left;
       
	/** Right */
	org_scn_community_shared_HorizontalAlignEnumfield Right;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_ImageSizeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify field 
 */
class org_scn_community_shared_ImageSize extends Enum {

	/** 16x16 pixels */
	org_scn_community_shared_ImageSizeEnumfield Size_16px;

	/** 32x32 pixels */
	org_scn_community_shared_ImageSizeEnumfield Size_32px;

	/** 64x64 pixels */
	org_scn_community_shared_ImageSizeEnumfield Size_64px;
	
	/** 128x128 pixels */
	org_scn_community_shared_ImageSizeEnumfield Size_128px;
}
/**
 * enum filed definition
 */
class org_scn_community_shared_MemberDisplayEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_MemberDisplay extends Enum {

	/** Text */
	org_scn_community_shared_MemberDisplayEnumfield Text;
       
	/** Text Value */
	org_scn_community_shared_MemberDisplayEnumfield Text_Value;

	/** Text Key*/
	org_scn_community_shared_MemberDisplayEnumfield Text_Key;

	/** Text Count*/
	org_scn_community_shared_MemberDisplayEnumfield Text_Count;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_NavigationTypeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_NavigationType extends Enum {

	/** PAGINATOR */
	org_scn_community_shared_NavigationTypeEnumfield Paginator;
       
	/** SCROLLBAR */
	org_scn_community_shared_NavigationTypeEnumfield Scrollbar;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_PlacementTypeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_PlacementType extends Enum {

	/** Auto */
	org_scn_community_shared_PlacementTypeEnumfield Auto;
       
	/** Horizontal */
	org_scn_community_shared_PlacementTypeEnumfield Horizontal;

	/** Vertical */
	org_scn_community_shared_PlacementTypeEnumfield Vertical;

	/** Left */
	org_scn_community_shared_PlacementTypeEnumfield Left;
	
	/** Right */
	org_scn_community_shared_PlacementTypeEnumfield Right;
	
	/** Top */
	org_scn_community_shared_PlacementTypeEnumfield Top;
	
	/** Bottom */
	org_scn_community_shared_PlacementTypeEnumfield Bottom;
}
/**
 * enum filed definition
 */
class org_scn_community_shared_SelectionStateEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify field 
 */
class org_scn_community_shared_SelectionState extends Enum {

	/** Checked */
	org_scn_community_shared_SelectionStateEnumfield Checked;
       
	/** Unchecked */
	org_scn_community_shared_SelectionStateEnumfield Unchecked;

	/** Mixed */
	org_scn_community_shared_SelectionStateEnumfield Mixed;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_SelectionTypeEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort type 
 */
class org_scn_community_shared_SelectionType extends Enum {

	/** Single */
	org_scn_community_shared_SelectionTypeEnumfield Single;
       
	/** Range */
	org_scn_community_shared_SelectionTypeEnumfield Range;

	/** Multiple */
	org_scn_community_shared_SelectionTypeEnumfield Multiple;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_SecondValueContentEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify field 
 */
class org_scn_community_shared_SecondValueContent extends Enum {

	/** Value */
	org_scn_community_shared_SecondValueContentEnumfield Value;
       
	/** Key */
	org_scn_community_shared_SecondValueContentEnumfield Key;

	/** Count */
	org_scn_community_shared_SecondValueContentEnumfield Count;
}

/**
 * enum filed definition
 */
class org_scn_community_shared_SortDirectionEnumfield extends Enumfield {
       
}

/**
 * a set of constants to specify sort direction 
 */
class org_scn_community_shared_SortDirection extends Enum {

	/** ASCENDING */
	org_scn_community_shared_SortDirectionEnumfield Ascending;
       
	/** DESCENDING */
	org_scn_community_shared_SortDirectionEnumfield Descending;
}
