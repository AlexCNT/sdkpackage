	// here is the place for other custom functions

	/**
	 * Add a header button<br/>
	 * <example><br/>
	 * Add or update a header button by key 'MENU'.<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.addHeaderButton("MENU","Menu",false,"sap-icon://menu2","Emphasized");<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void addHeaderButton (
			/*Button Key*/ String buttonKey,
			/*Button Title*/ String buttonTitle,
			/* Show Title */ boolean [ optional ] showTitle,
			/*Icon*/ String [ optional ] icon,
			/*Button Type*/ String [ optional ] buttonType,
			
			) 
	{*
		var o = eval(this.itemConfig);
		var matchIndex = -1;
		var sTitle = true;
		if(showTitle != undefined) sTitle = showTitle;
		var h;
		for(var i=0;i<o.length;i++){
			if(o[i].key == buttonKey) matchIndex = i;
		}
		if(matchIndex==-1) {
			o.push({
				key : buttonKey,
				text : buttonTitle,
				showTitle : sTitle,
				icon : icon,
				items : [],
				type : buttonType || "Default"
			});
		}else{	// Don't overwrite items
			o[matchIndex].text = buttonTitle;
			o[matchIndex].showTitle = sTitle;
			o[matchIndex].icon = icon;
			o[matchIndex].type = buttonType || "Default";
		}		
		itemConfig = JSON.stringify(o);
	*}
	/**
	 * Add an item to a header button.  Will add the header button if it does not yet exist.<br/>
	 * <example><br/>
	 * Add an item called 'Help' to header button with key 'MENU' with an icon sys-help-2<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.addItem("MENU", "help", "Help", "sap-icon://sys-help-2");<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void addItem (
			/*Button Key*/ String buttonKey,
			/*Item Key*/ String itemKey,
			/*Item Text*/ String itemText,
			/*Item Icon*/ String [ optional ] itemIcon,
			
			) 
	{*
		var o = eval(this.itemConfig);
		var matchIndex = -1;
		for(var i=0;i<o.length;i++){
			if(o[i].key == buttonKey) matchIndex = i;
		}
		if(matchIndex == -1 ){	// Add section for the lazy
			this.addHeaderButton(buttonKey, buttonKey);
			o = eval(this.itemConfig);
			matchIndex = o.length-1;
		}
		o[matchIndex].items.push({
			key : itemKey,
			text : itemText,
			icon : itemIcon || ""
		});
		itemConfig = JSON.stringify(o);
	*}
	/**
	 * Get header of and item clicked.<br/>
	 */
	String getHeaderClicked (
			
			) 
	{*
		return this.selectedHeader;
	*}
	/**
	 * Get header key of and item clicked.<br/>
	 */
	String getHeaderKeyClicked (
			
			) 
	{*
		return this.selectedHeaderKey;
	*}
	/**
	 * Get item clicked.<br/>
	 */
	String getItemClicked (
			
			) 
	{*
		return this.selectedItem;
	*}
	/**
	 * Get item key clicked.<br/>
	 */
	String getItemKeyClicked (
			
			) 
	{*
		return this.selectedItemKey;
	*}
	/**
	 * Remove All Button<br/>
	 * <example><br/>
	 * Remove all button<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.removeAllButtons();<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void removeAllButtons (
			
			) 
	{*
		itemConfig = JSON.stringify([]);
	*}
	/**
	 * Remove All Items in a header button<br/>
	 * <example><br/>
	 * Remove all items in header button 'MENU'<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.removeAllItems("Menu");<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void removeAllItems (
			/*Button Key*/ String buttonKey,
			
			) 
	{*
		var o = eval(this.itemConfig);
		var matchIndex = -1;
		for(var i=0;i<o.length;i++){
			if(o[i].key == buttonKey) matchIndex = i;
		}
		if(matchIndex>-1) o[matchIndex].items = [];
		itemConfig = JSON.stringify(o);
	*}
	/**
	 * Remove a button<br/>
	 * <example><br/>
	 * Remove a header button with key 'MENU'<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.removeHeaderButton("MENU");<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void removeHeaderButton (
			/*Button Key*/ String buttonKey,
			
			) 
	{*
		var o = eval(this.itemConfig);
		var matchIndex = -1;
		for(var i=0;i<o.length;i++){
			if(o[i].key == buttonKey) matchIndex = i;
		}
		if(matchIndex>-1) o.splice(matchIndex,1);
		itemConfig = JSON.stringify(o);
	*}
	/**
	 * Removes an item from a header button.<br/>
	 * <example><br/>
	 * Remove an item with key 'HELP' from header button with key 'MENU'<br/>
	 * <code><br/>
	 * FIORITOOLBAR_1.removeItem("MENU", "HELP");<br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void removeItem (
			/*Button Key*/ String buttonKey,
			/*Item Key*/ String itemKey,
			
			) 
	{*
		var o = eval(this.itemConfig);
		var matchIndex = -1;
		for(var i=0;i<o.length;i++){
			if(o[i].key == buttonKey) matchIndex = i;
		}
		if(matchIndex != -1 ){
			var items = o[matchIndex].items;
			var itemIndex = -1;
			for(var i=0;i<items.length;i++){
				if(items[i].key == itemKey) itemIndex = i;
			}
			if(itemIndex>-1) items.splice(itemIndex,1);
			itemConfig = JSON.stringify(o);
		}
	*}
	