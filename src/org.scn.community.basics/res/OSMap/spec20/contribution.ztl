	// here is the place for other custom functions

	/**
	 * Adds a new location. Keep in mind key should be unique.<br/>
	 * <example><br/>
	 * You want to add 2 locations<br/>
	 * <code><br/>
	 * OSMAP_1.addLocation("MADRIT", "Madrit", "", 40.4, -3.7);  <br/>
	 * OSMAP_1.addLocation("WALLDORF", "SAP SE Headquaters", "SAP.jpg", 49.293417, 8.642384);  <br/>
	 * </code><br/>
	 * </example><br/>
	 */
	void addLocation (
			/*Element Key (must be unique)*/ String elementKey,
			/*Element text*/ String elementText,
			/*Image URL if not set no image*/ String imageUrl,
			/*Latitude (horizontal)*/ float latitude,
			/*Longitide (vertical)*/ float longitude,
			
			) 
	{*
		var itemDef = { 
			"key": elementKey, 
			"text": elementText, 
			"url": imageUrl,
			"lat": latitude,
			"long": longitude
			};
	
		if (this.elementsContent === undefined || this.elementsContent === "" || this.elementsContent === "<delete>"){
			this.elementsContent = "[]";
		}
		
		var elementsJson = JSON.parse(this.elementsContent);
		
		var alreadyFound = false;
		for (var i = 0; i < elementsJson.length ; i++){
			if (elementsJson[i].key == elementKey) {
				alreadyFound = true;
				break;
			}
		}
		
		if(!alreadyFound) {
			elementsJson.push(itemDef);
		}
	
		this.elementsContent = JSON.stringify(elementsJson);
	*}
	/**
	 * returns the selected key<br/>
	 */
	String getSelectedKey (
			
			) 
	{*
		return this.selectedKey;
	*}
	/**
	 * Moves the map to the given location by key<br/>
	 */
	void moveTo (
			/*key which schould be moved to*/ String key,
			
			) 
	{*
		this.moveAction = this.moveAction + 1;
		this.moveTo = key
	*}
	/**
	 * Moves the view on the map in the down direction<br/>
	 */
	void panDown (
			
			) 
	{*
		this.panAction = this.panAction + 1; 
		this.pan = "000D";
	*}
	/**
	 * Moves the view on the map in the left direction<br/>
	 */
	void panLeft (
			
			) 
	{*
		this.panAction = this.panAction + 1; 
		this.pan = "0L00";
	*}
	/**
	 * Moves the view on the map in the right direction<br/>
	 */
	void panRight (
			
			) 
	{*
		this.panAction = this.panAction + 1; 
		this.pan = "00R0";
	*}
	/**
	 * Moves the view on the map in the up direction<br/>
	 */
	void panUp (
			
			) 
	{*
		this.panAction = this.panAction + 1; 
		this.pan = "U000";
	*}
	/**
	 * Zooms in the map<br/>
	 */
	void zoomIn (
			
			) 
	{*
		this.zoom = this.zoom + 1;
	*}
	/**
	 * Zooms out the map<br/>
	 */
	void zoomOut (
			
			) 
	{*
		this.zoom = this.zoom - 1;
	*}
	