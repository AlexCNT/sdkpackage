	this._elementsContent%PROPERTY_NAME% = [];
	this._selectedElementKey%PROPERTY_NAME% = "";
	this._selectedItemKey%PROPERTY_NAME% = "";
	this._currentItemConfig%PROPERTY_NAME% = {};

	/*
	 * Retrieves JSON for Element Entry
	 */
	this.getElement%PROPERTY_NAME% = function(key){
		var sections = this.gatherElements%PROPERTY_NAME%();
		for(var i=0;i<sections.length;i++){
			if(sections[i].key == key) return sections[i];
		}
	};
	/*
	 * Retrieves JSON for Item Entry
	 */
	this.getItem%PROPERTY_NAME% = function(sectionKey,key){
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			if(this._elementsContent%PROPERTY_NAME%[i].key == key && this._elementsContent%PROPERTY_NAME%[i].parentKey==sectionKey) return this._elementsContent%PROPERTY_NAME%[i];
		}
	};
	/*
	 * Update Element JSON and notify Design Studio IDE
	 */
	this.updateElement%PROPERTY_NAME% = function(key,section){
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			var element = this._elementsContent%PROPERTY_NAME%[i];
			if(!element.leaf && element.key==key){
				this._elementsContent%PROPERTY_NAME%[i] = section;
			}
		}
		this.firePropertiesChanged(["%PROPERTY_NAME%"]);
		this.updateProperty%PROPERTY_NAME%();
	};
	/*
	 * Update Item JSON and notify Design Studio IDE
	 */
	this.updateItem%PROPERTY_NAME% = function(key){
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			var element = this._elementsContent%PROPERTY_NAME%[i];
			if(element.leaf && element.key==key){
				this._elementsContent%PROPERTY_NAME%[i] = this._currentItemConfig%PROPERTY_NAME%;
			}
		}
		this.firePropertiesChanged(["%PROPERTY_NAME%"]);
		this.updateProperty%PROPERTY_NAME%();
		this.closeDetail%PROPERTY_NAME%();
	};
	/*
	 * Displays Element Properties
	 */
	this.showElementProperties%PROPERTY_NAME% = function(){
		this._sectionPropertyLayout%PROPERTY_NAME%.destroyContent();
		this._sectionPropertyList%PROPERTY_NAME%.destroyContent();
		
		this._selectedElementKey%PROPERTY_NAME% = this._listBuilder%PROPERTY_NAME%.getSelectedKey();
		if(!this._selectedElementKey%PROPERTY_NAME%) return;
		var selectedElement = this.getElement%PROPERTY_NAME%(this._selectedElementKey%PROPERTY_NAME%);		
		if(!selectedElement) return;
		
		var items = this.gatherItems%PROPERTY_NAME%(this._selectedElementKey%PROPERTY_NAME%);
		
		var sectionKey = new sap.ui.commons.TextView({text : "%ROOT_PROPERTY_DESCRIPTION%"});
		sectionKey.addStyleClass("org-scn-ApsLabelArray");
		var txtElementKey = new sap.ui.commons.TextField({value : selectedElement.key, width: "180px"});
		txtElementKey.addStyleClass("org-scn-ApsInputArray");
		txtElementKey.attachChange(function(oControlEvent){
			var value = oControlEvent.getParameter("newValue");
			// Protect Key
			value = this._listBuilder%PROPERTY_NAME%.generateKey(value);
			var section = this.getElement%PROPERTY_NAME%(this._listBuilder%PROPERTY_NAME%.getSelectedKey());
			section.key = value;
			// Update Parent Key references
			for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
				var element = this._elementsContent%PROPERTY_NAME%[i];
				if(element.parentKey == this._listBuilder%PROPERTY_NAME%.getSelectedKey() && element.leaf) element.parentKey = value;
			}
			this.updateElement%PROPERTY_NAME%(this._listBuilder%PROPERTY_NAME%.getSelectedKey(),section);
			this._listBuilder%PROPERTY_NAME%.setSelectedKey(value);
			this.showElementProperties%PROPERTY_NAME%();
		}, this);
		this._sectionPropertyLayout%PROPERTY_NAME%.addContent(sectionKey);
		this._sectionPropertyLayout%PROPERTY_NAME%.addContent(txtElementKey);

%SECTION_CONTENT_HANDLER%
		var itemsLabel = new sap.ui.commons.TextView({text : "Items"});
		itemsLabel.addStyleClass("org-scn-ApsLabelArray");
		var itemsList = new org.scn.community.propertysheet.ListBuilder({
			width : "200px",
			newKeyPrefix : "ITEM_",
			newTextPrefix : "Item ",
			list : this.gatherItems%PROPERTY_NAME%(this._listBuilder%PROPERTY_NAME%.getSelectedKey()),
			showDetail : true,
			selectedKey : this._selectedItemKey%PROPERTY_NAME%
		});
		
		itemsList.attachItemAdded(this.addItem%PROPERTY_NAME%,this);
		itemsList.attachItemDeleted(this.delItem%PROPERTY_NAME%,this);
		itemsList.attachItemDetail(this.showItemProperties%PROPERTY_NAME%,this);
		itemsList.attachItemMoved(this.moveItem%PROPERTY_NAME%,this);
		itemsList.attachItemSelected(this.itemSelected%PROPERTY_NAME%,this);
		
		this._sectionPropertyList%PROPERTY_NAME%.addContent(itemsLabel);
		this._sectionPropertyList%PROPERTY_NAME%.addContent(itemsList);
	};
	/*
	 * Displays Item Properties in a Popup Panel
	 */
	this.showItemProperties%PROPERTY_NAME% = function(oControlEvent){
		var detailData = oControlEvent.getParameters();
		this._currentItemConfig%PROPERTY_NAME% = this.getItem%PROPERTY_NAME%(this._listBuilder%PROPERTY_NAME%.getSelectedKey(),detailData.key);
		if(!this._currentItemConfig%PROPERTY_NAME%) return;
		
		var itemDetailPanel = new sap.ui.commons.Panel({
			text : "Item Details",
			showCollapseIcon : false,
			width : "95%"
		});
		itemDetailPanel.addStyleClass("org-scn-ApsPopupPanel");
		var itemDetailLayout = new sap.ui.commons.layout.VerticalLayout({
			width : "100%"
		});
		
		var itemKey = new sap.ui.commons.TextView({text : "%ITEM_PROPERTY_DESCRIPTION%"});
		itemKey.addStyleClass("org-scn-ApsLabelArray");
		var txtItemKey = new sap.ui.commons.TextField({value : this._currentItemConfig%PROPERTY_NAME%.key, width: "300px"});
		txtItemKey.addStyleClass("org-scn-ApsInputArray");
		txtItemKey.attachChange(function(oControlEvent){
			var value = oControlEvent.getParameter("newValue");
			// Protect Key
			var allItems = new org.scn.community.propertysheet.ListBuilder();		
			allItems.setList(this._elementsContent%PROPERTY_NAME%);
			var newItemKey = allItems.generateKey(value);
			delete allItems;
			this._currentItemConfig%PROPERTY_NAME%.key = newItemKey;		
		}, this);
		itemDetailLayout.addContent(itemKey);
		itemDetailLayout.addContent(txtItemKey);

%ITEM_CONTENT_HANDLER%
		var detailButtons = new sap.ui.commons.layout.HorizontalLayout({ });
		var closeButton = new sap.ui.commons.Button({
			text : "Cancel"
		});
		var okButton = new sap.ui.commons.Button({
			text : "Update"
		});
		
		closeButton.attachPress(this.closeDetail%PROPERTY_NAME%,this);
		okButton.attachPress(this.updateItem%PROPERTY_NAME%,this);
		
		detailButtons.addContent(closeButton);
		detailButtons.addContent(okButton);
		detailButtons.addStyleClass("org-scn-ApsPopUpButtons");
		
		itemDetailLayout.addContent(detailButtons);
		itemDetailPanel.addContent(itemDetailLayout);
		
		if(!this._popup%PROPERTY_NAME%) this._popup%PROPERTY_NAME% = new sap.ui.core.Popup(itemDetailPanel, true, true, true);
		
		//this._popup%PROPERTY_NAME%.destroyContent();
		this._popup%PROPERTY_NAME%.open(250,"center center", "center center", document.body, null);
	};
	/*
	 * Fires when Element Listbox is selected
	 */
	this.elementSelected%PROPERTY_NAME% = function(oControlEvent){
		this._selectedElementKey%PROPERTY_NAME% = "";
		if(oControlEvent.getParameters().key) this._selectedElementKey%PROPERTY_NAME% = oControlEvent.getParameters().key;
		this.showElementProperties%PROPERTY_NAME%();
	};
	/*
	 * Fires when Item Listbox is selected
	 */
	this.itemSelected%PROPERTY_NAME% = function(oControlEvent){
		this._selectedItemKey%PROPERTY_NAME% = "";
		if(oControlEvent.getParameters().key) this._selectedItemKey%PROPERTY_NAME% = oControlEvent.getParameters().key;
	};
	/*
	 * Fires when component is selected or when properties change to re-render
	 */
	this.updateProperty%PROPERTY_NAME% = function(){
		this._listBuilder%PROPERTY_NAME%.setList(this.gatherElements%PROPERTY_NAME%());
		this.showElementProperties%PROPERTY_NAME%(this._listBuilder%PROPERTY_NAME%.getSelectedKey());
	};
	/*
	 * Fires when item delete button clicked
	 */
	this.delItem%PROPERTY_NAME% = function(oControlEvent){
		var sectionKey = this._listBuilder%PROPERTY_NAME%.getSelectedKey();
		var itemKey = oControlEvent.getParameter("key");
		if(sectionKey && itemKey) {
			for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
				if(this._elementsContent%PROPERTY_NAME%[i].leaf == true && this._elementsContent%PROPERTY_NAME%[i].key == itemKey && this._elementsContent%PROPERTY_NAME%[i].parentKey==sectionKey) {
					this._elementsContent%PROPERTY_NAME%.splice(i,1);
					this.firePropertiesChanged(["%PROPERTY_NAME%"]);
					this.updateProperty%PROPERTY_NAME%();
				}
			}
		}
		this.updateProperty%PROPERTY_NAME%();
	}
	/*
	 * Fires when section delete button clicked
	 */
	this.delElement%PROPERTY_NAME% = function(oControlEvent){
		var key = oControlEvent.getParameter("key");
		if(key) {
			// Delete Element
			for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
				if(this._elementsContent%PROPERTY_NAME%[i].leaf == false && this._elementsContent%PROPERTY_NAME%[i].key == key) {
					this._elementsContent%PROPERTY_NAME%.splice(i,1);
				}
			}
			// Delete Items under Element
			for(var i=this._elementsContent%PROPERTY_NAME%.length-1;i>=0;i--){
				if(this._elementsContent%PROPERTY_NAME%[i].leaf == true && this._elementsContent%PROPERTY_NAME%[i].parentKey == key) {
					this._elementsContent%PROPERTY_NAME%.splice(i,1);
				}
			}
			this.firePropertiesChanged(["%PROPERTY_NAME%"]);
		}
		this.updateProperty%PROPERTY_NAME%();
	};
	/*
	 * Fires when item add button clicked
	 */
	this.addItem%PROPERTY_NAME% = function(oControlEvent){
		var allItems = new org.scn.community.propertysheet.ListBuilder();		
		allItems.setList(this._elementsContent%PROPERTY_NAME%);
		var newItemKey = allItems.generateKey("Item");
		delete allItems;
		var sectionItems = new org.scn.community.propertysheet.ListBuilder();
		sectionItems.setList(this._elementsContent%PROPERTY_NAME%);
		var newItem = { 
			parentKey : this._listBuilder%PROPERTY_NAME%.getSelectedKey(),
			key : newItemKey, 
			text : newItemKey, 
			leaf : true,
			toggable:false,
			image:"",
			selected:false
		};
		this._elementsContent%PROPERTY_NAME%.push(newItem);
		this.firePropertiesChanged(["%PROPERTY_NAME%"]);
		this.updateProperty%PROPERTY_NAME%();
	}
	/*
	 * Fires when section add button clicked
	 */
	this.addElement%PROPERTY_NAME% = function(oControlEvent){
		var newKey = this._listBuilder%PROPERTY_NAME%.generateKey("Element");
		var newElement = { 
			parentKey : "ROOT",
			key : newKey,
			text : newKey, 
			leaf : false,
			toggable:false,
			image:"",
			selected:false
		};
		this._listBuilder%PROPERTY_NAME%.setSelectedKey(newKey);
		this._elementsContent%PROPERTY_NAME%.push(newElement);
		this.firePropertiesChanged(["%PROPERTY_NAME%"]);
		this.updateProperty%PROPERTY_NAME%();
	};
	/*
	 * Fires when section up or down button clicked
	 */
	this.moveElement%PROPERTY_NAME% = function(oControlEvent){
		var movementData = oControlEvent.getParameters();
		var targetIndex = -1;
		var sourceIndex = -1;
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			if(this._elementsContent%PROPERTY_NAME%[i].key == movementData.key && !this._elementsContent%PROPERTY_NAME%[i].leaf) sourceIndex = i;
			if(this._elementsContent%PROPERTY_NAME%[i].key == movementData.targetKey && !this._elementsContent%PROPERTY_NAME%[i].leaf) targetIndex = i;
		}
		if(targetIndex != -1 && sourceIndex != -1){
			var temp = this._elementsContent%PROPERTY_NAME%[targetIndex];
			this._elementsContent%PROPERTY_NAME%[targetIndex] = this._elementsContent%PROPERTY_NAME%[sourceIndex];
			this._elementsContent%PROPERTY_NAME%[sourceIndex] = temp;
			this.firePropertiesChanged(["%PROPERTY_NAME%"]);
			this.updateProperty%PROPERTY_NAME%();
		}
	};
	/*
	 * Close Item Properties Popup
	 */
	this.closeDetail%PROPERTY_NAME% = function(oControlEvent){
		if(this._popup%PROPERTY_NAME%) {
			this._popup%PROPERTY_NAME%.close();
			this._popup%PROPERTY_NAME%.destroy();
			delete this._popup%PROPERTY_NAME%;
		}
		
	};
	/*
	 * Fires when item up or down button clicked
	 */
	this.moveItem%PROPERTY_NAME% = function(oControlEvent){
		var movementData = oControlEvent.getParameters();
		var targetIndex = -1;
		var sourceIndex = -1;
		var sectionKey = this._listBuilder%PROPERTY_NAME%.getSelectedKey();
		var itemKey = oControlEvent.getParameter("key");
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			if(this._elementsContent%PROPERTY_NAME%[i].key == itemKey && this._elementsContent%PROPERTY_NAME%[i].parentKey == sectionKey && this._elementsContent%PROPERTY_NAME%[i].leaf) sourceIndex = i;
			if(this._elementsContent%PROPERTY_NAME%[i].key == movementData.targetKey && this._elementsContent%PROPERTY_NAME%[i].parentKey == sectionKey && this._elementsContent%PROPERTY_NAME%[i].leaf) targetIndex = i;
		}
		if(targetIndex != -1 && sourceIndex != -1){
			var temp = this._elementsContent%PROPERTY_NAME%[targetIndex];
			this._elementsContent%PROPERTY_NAME%[targetIndex] = this._elementsContent%PROPERTY_NAME%[sourceIndex];
			this._elementsContent%PROPERTY_NAME%[sourceIndex] = temp;
			this.firePropertiesChanged(["%PROPERTY_NAME%"]);
			this.updateProperty%PROPERTY_NAME%();
		}
	}
	/*
	 * Convenience Function to return only entries that are Elements
	 */
	this.gatherElements%PROPERTY_NAME% = function(){
		var sections = [];
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			if(this._elementsContent%PROPERTY_NAME%[i].leaf==false) sections.push(this._elementsContent%PROPERTY_NAME%[i]);
		}
		return sections;
	};
	/*
	 * Convenience Function to return only entries that are Items (Leafs)
	 */
	this.gatherItems%PROPERTY_NAME% = function(sectionKey){
		var items = [];
		for(var i=0;i<this._elementsContent%PROPERTY_NAME%.length;i++){
			if(this._elementsContent%PROPERTY_NAME%[i].leaf==true && this._elementsContent%PROPERTY_NAME%[i].parentKey==sectionKey) items.push(this._elementsContent%PROPERTY_NAME%[i]);
		}
		return items;
	};
	/*
	 * Property Sheet Initialization
	 */
	this.init%PROPERTY_NAME% = function(){
		
		this._label%PROPERTY_NAME% = new sap.ui.commons.Label({text: " %PROPERTY_DESCRIPTION%"});
		this._label%PROPERTY_NAME%.addStyleClass("org-scn-ApsLabel");
		this._content.addContent(this._label%PROPERTY_NAME%);
		
		this._hLayout%PROPERTY_NAME% = new sap.ui.commons.layout.HorizontalLayout({ });
		this._content.addContent(this._hLayout%PROPERTY_NAME%);
		this._listBuilder%PROPERTY_NAME% = new org.scn.community.propertysheet.ListBuilder({
			width : "200px"
		});
		
		this._listBuilder%PROPERTY_NAME%.attachItemAdded(this.addElement%PROPERTY_NAME%,this);
		this._listBuilder%PROPERTY_NAME%.attachItemDeleted(this.delElement%PROPERTY_NAME%,this);
		this._listBuilder%PROPERTY_NAME%.attachItemMoved(this.moveElement%PROPERTY_NAME%,this);
		this._listBuilder%PROPERTY_NAME%.attachItemSelected(this.elementSelected%PROPERTY_NAME%,this);
		
		this._sectionPropertyLayout%PROPERTY_NAME% = new sap.ui.commons.layout.VerticalLayout({
			width : "200px"
		});
		this._sectionPropertyList%PROPERTY_NAME% = new sap.ui.commons.layout.VerticalLayout({
			width : "200px"
		});
		this._sectionPropertyLayout%PROPERTY_NAME%.addStyleClass("org-scn-ApsDoubleArrayVertical");
		this._sectionPropertyList%PROPERTY_NAME%.addStyleClass("org-scn-ApsDoubleArrayVertical");

		this._hLayout%PROPERTY_NAME%.addContent(this._listBuilder%PROPERTY_NAME%);
		this._hLayout%PROPERTY_NAME%.addContent(this._sectionPropertyLayout%PROPERTY_NAME%);
		this._hLayout%PROPERTY_NAME%.addContent(this._sectionPropertyList%PROPERTY_NAME%);
		this._hLayout%PROPERTY_NAME%.addStyleClass("org-scn-ApsDoubleArray");
		
		this.updateProperty%PROPERTY_NAME%();
	};

	this.%PROPERTY_NAME% = function(s){
		if( s === undefined){
			return JSON.stringify(this._elementsContent%PROPERTY_NAME%);
		}else{
			var o = [];
			if(s && s!="") o = jQuery.parseJSON(s);
			this._elementsContent%PROPERTY_NAME% = o;
			this.updateProperty%PROPERTY_NAME%();
			return this;
		}
	};