		var dataCellList%PROPERTY_CAPITAL_CUT% = that.getDataCellList%PROPERTY_CAPITAL_CUT%();
		var useDataCellList%PROPERTY_CAPITAL_CUT% = false;
		if(org_scn_community_databound.hasData (dataCellList%PROPERTY_CAPITAL_CUT%)) {
			dataCellList%PROPERTY_CAPITAL_CUT% = org_scn_community_databound.flatten (dataCellList%PROPERTY_CAPITAL_CUT%,options);
			useDataCellList%PROPERTY_CAPITAL_CUT% = true;
		}

		var l_%PROPERTY_CAPITAL_CUT% = that.get%PROPERTY_CAPITAL_CUT%();
		l_%PROPERTY_CAPITAL_CUT% = org_scn_community_basics.parseJson(l_%PROPERTY_CAPITAL_CUT%, "A");
		
		var l_%NAME%JsonTemplate = [];
		for (var %NAME%I in l_%PROPERTY_CAPITAL_CUT%) {
			var %NAME%O = l_%PROPERTY_CAPITAL_CUT%[%NAME%I];
			
			var %NAME%PropO = {};
			for (var %NAME%PropI in %NAME%O) {
				if(%NAME%PropI == "parentKey" || %NAME%PropI == "leaf" || %NAME%PropI == "key") continue;
				%NAME%PropO[%NAME%PropI] = %NAME%O[%NAME%PropI];
			}
			l_%NAME%JsonTemplate.push(%NAME%PropO);
		}
